| Obj Model Loader
| - faltan indices negativos
| PHREDA 2017
|-----------------------------------
^r4/lib/gui.txt
^r4/lib/parse.txt
^r4/lib/system.txt
^r4/lib/loadimg.txt

^r4/lib/btn.txt
^r4/3d/dev/tritex.txt

^r4/lib/trace.txt

#textobj | textparse
#textmtl

#verl	| vertices
#verl>
#nver

#facel	| faces
#facel>
#nface

#norml	| normal
#norml>
#nnorm

#texl	| text
#texl>
#ntex

#paral	| parametros
#paral>
#npara

#ncolor	| colores
#colorl
#colorl>

|-----------------------------
:vert	| vertices (x,y,z[,w=1])
	2 + trim
	verl> >b
	getfenro b!+
	getfenro b!+
	getfenro b!+
	dup c@ 32 <? ( drop 1.0 )( drop getfenro )
	b!+ b> 'verl> !
	;
:texc	| textcoor (u, v [,w])
	texl> >b
	3 + trim
	getfenro b!+
	getfenro b!+
	dup c@ 32 <? ( drop 1.0 )( drop getfenro )
	b!+ b> 'texl> !
	;
:norm	| normales (x,y,z)
	norml> >b
	3 + trim
	getfenro b!+
	getfenro b!+
	getfenro b!+
	b> 'norml> !
	;
:pspa	| param space ( u [,v] [,w] )
	paral> >b
	3 + trim
	getfenro b!+
	getfenro b!+
	getfenro b!+
	b> 'paral> !
	;

#nv #nt #nn #colornow

:searchcol | str -- nro
	0 ( ncolor <? )(
		dup 4 << colorl + @ 0? ( 3drop -1 ; )
		pick2 =pre 1? ( 2drop nip ; )
		2drop 1+ ) 2drop -1 ;

:uface
	?sint 'nv ! dup 1- c@
	32 <? ( drop 1- ; ) 33 <? ( drop ; ) drop
	?sint 'nt ! dup 1- c@
	32 <? ( drop 1- ; ) 33 <? ( drop ; ) drop
	?sint 'nn ! dup 1- c@
	32 <? ( drop 1- ; ) drop
	;

:face	| face nvert( v/t/n  v//n v/t  v)??
	2 + trim
	facel> >b
	| solo tres
	uface
	nv b!+ nt 16 << nn or b!+
	uface
	nv b!+ nt 16 << nn or b!+
   	uface
	nv b!+ nt 16 << nn or b!+
	colornow b!+
	| manejar aca si hay cuatro
	dup c@ $ff and 13 >? ( trace ) drop

	b> 'facel> !
	;
:smoo	| 1/off
	2 + trim
	;
:onam	| o [object name]
	2 + trim
	;
:gman	| g [group name]
	2 + trim
	;

:usmt	| usemtl [material name]
	6 + trim
	dup "%l" mprint searchcol 'colornow !
	;

:parseline
	"vt" =pre 1? ( drop texc ; ) drop	| textcoor (u, v [,w])
	"vn" =pre 1? ( drop norm ; ) drop	| normales (x,y,z)
	"vp" =pre 1? ( drop pspa ; ) drop	| param space ( u [,v] [,w] )
	"v" =pre 1? ( drop vert ; ) drop	| vertices (x,y,z[,w=1])
	"f" =pre 1? ( drop face ; ) drop	| face nvert( v/t/n  v//n v/t  v)??
	"s" =pre 1? ( drop smoo ; ) drop	| 1/off
	"o" =pre 1? ( drop onam ; ) drop	| o [object name]
	"g" =pre 1? ( drop gman ; ) drop	| g [group name]
	"mtllib" =pre 1? ( drop ; ) drop	| mtllib [external .mtl file name]
	"usemtl" =pre 1? ( drop usmt ; ) drop	| usemtl [material name]
	;

::>>cr | adr -- adr'/0	; proxima linea/0
	( c@+ $ff and 13 >? )( drop ) 0? ( nip ; ) drop ;

:parseobj | text --
	( trim parseline >>cr 0? ) drop ;


|--------------------
| nombre text mem solido
#colora

:illum
	;

:newmtl
	colorl> 'colora !
	16 'colorl> +!
	7 + trim
	dup colora !
	;

:texmap
	7 + trim dup colora 4+ !
|	existe?
	dup 'path "%s%l" mprint
	loadimg colora 12 + !
	;

:colorp
	3 + trim
	getfenro $ff 1.0 */ $ff0000 and swap
	getfenro $ff 1.0 */ 8 >> $ff00 and swap
	getfenro $ff 1.0 */ 16 >> $ff and
	rot or rot or
	colora 12 + !
	;

:parselinem
	"newmtl " =pre 1? ( drop newmtl ; ) drop
	"Ka" =pre 1? ( drop colorp ; ) drop
	"Kd" =pre 1? ( drop colorp ; ) drop
	"Ks" =pre 1? ( drop ; ) drop
	"Ke" =pre 1? ( drop ; ) drop
	"Ni" =pre 1? ( drop ; ) drop
	"d " =pre 1? ( drop ; ) drop
	"Tr" =pre 1? ( drop ; ) drop | 1-d
	"illum" =pre 1? ( drop illum ; ) drop
	"map_Kd" =pre 1? ( drop texmap ; ) drop
	"map_Ka" =pre 1? ( drop texmap ; ) drop
	"map_Ks" =pre 1? ( drop ; ) drop
	"map_Ns" =pre 1? ( drop ; ) drop
	"map_d" =pre 1? ( drop ; ) drop
	"map_bump " =pre 1? ( drop ; ) drop
	"bump" =pre 1? ( drop ; ) drop
	"disp" =pre 1? ( drop ; ) drop
	"decal" =pre 1? ( drop ; ) drop
	;

:parsemtl | text --
	0? ( drop ; )
	( trim parselinem >>cr 0? ) drop ;

:dumpcolor
	0 ( ncolor <? )(
		dup 4 << colorl +
		dup @ "%l " print
		dup 4+ @ "%l " print
		dup 8 + @ "%h " print
		12 + @ "%h " print cr
		1+ ) drop
	;
|--------- contar elementos y cargar mtl
:mtli	| mtllib [external .mtl file name]
	6 + trim
	dup 'path
	"%s%l" mprint
	here dup 'textmtl !
	swap
	load 0 swap !+ 'here !
	;

:parsecount
	"vt" =pre 1? ( drop 1 'ntex +! ; ) drop	| textcoor (u, v [,w])
	"vn" =pre 1? ( drop 1 'nnorm +! ; ) drop	| normales (x,y,z)
	"vp" =pre 1? ( drop 1 'npara +! ; ) drop	| param space ( u [,v] [,w] )
	"v" =pre 1? ( drop 1 'nver +! ; ) drop	| vertices (x,y,z[,w=1])
	"f" =pre 1? ( drop 1 'nface +! ; ) drop	| face nvert( v/t/n  v//n v/t  v)??
	"s" =pre 1? ( drop ; ) drop	| 1/off
	"o" =pre 1? ( drop ; ) drop	| o [object name]
	"g" =pre 1? ( drop ; ) drop	| g [group name]
	"mtllib" =pre 1? ( drop mtli ; ) drop	| mtllib [external .mtl file name]
	"usemtl" =pre 1? ( drop 1 'ncolor +! ; ) drop	| usemtl [material name]
	;

:preparse | adr --
	( trim parsecount >>cr 0? ) drop ;

:loadobj | "" -- mem
	getpath
	here dup 'textobj !
	swap load over =? ( 2drop 0 ; ) 0 swap !+
	'here !
	0 'nver !
	0 'nface !
	0 'nnorm !
	0 'ntex !
	0 'npara !
	0 'textmtl !
	textobj preparse
	here
	dup dup 'verl ! 'verl> !
	nver 4 << +
	dup dup 'texl ! 'texl> !
	ntex 12 * +
    dup dup 'norml ! 'norml> !
	nnorm 12 * +
	dup dup 'facel ! 'facel> !
	nface 7 2 << * +
    dup dup 'paral ! 'paral> !
	npara 12 * +
	dup dup 'colorl ! 'colorl> !
	ncolor 4 << +
	'here !
	textmtl parsemtl
	textobj parseobj
	here
	;

|------------------------------------------
#xmin #ymin #zmin #xmax #ymax #zmax

:objminmax | --
	verl >b
	b@+ dup 'xmin ! 'xmax !
	b@+ dup 'ymin ! 'ymax !
	b@+ dup 'zmin ! 'zmax !
	4 b+
	nver 1- ( 1? )( 1-
		b@+ xmin <? ( dup 'xmin ! ) xmax >? ( dup 'xmax ! ) drop
		b@+ ymin <? ( dup 'ymin ! ) ymax >? ( dup 'ymax ! ) drop
		b@+ zmin <? ( dup 'zmin ! ) zmax >? ( dup 'zmax ! ) drop
		4 b+
		) drop ;

:objmove | x y z --
	verl >b
	nver ( 1? )( 1-
		b@ pick4 + b!+
		b@ pick3 + b!+
		b@ pick2 + b!+
		4 b+
		) 4drop ;

:objcentra
	xmax xmin + 2/ neg
	ymax ymin + 2/ neg
	zmax zmin + 2/ neg
	objmove
	;

:objescala | por div --
	verl >b
	nver ( 1? )( 1-
		b@ pick3 pick3 */ b!+
		b@ pick3 pick3 */ b!+
		b@ pick3 pick3 */ b!+
		4 b+
		) 4drop ;

|-------------
#v2d

:drawtri | x y x y x y --
	2dup op
	2swap line
	2swap line
	line ;

:drawtrif | x y x y x y --
	2dup op
	2swap pline
	2swap pline
	pline
	poli ;

:objwire
	mark
	here 'v2d !
	verl >b
	nver ( 1? )( 1-
		b@+ b@+ b@+ 4 b+ project3d
		xy>d , ) drop
	facel >b
	nface ( 1? )( 1-
		b@+ 4 b+ 1- 2 << v2d + @ d>xy
		b@+ 4 b+ 1- 2 << v2d + @ d>xy
		b@+ 4 b+ 1- 2 << v2d + @ d>xy
		4 b+
		drawtri
		) drop
	empty
	;

|-------------
#zbuffer

#txres
#tyres
#tritt
0 0 0 0
0 0 0 0
0 0 0 0

:dumptri
	'tritt 
	@+ "%d " print @+ "%d " print @+ "%d " print @+ "%h " print cr
	@+ "%d " print @+ "%d " print @+ "%d " print @+ "%h " print cr
	@+ "%d " print @+ "%d " print @+ "%d " print @+ "%h " print cr
	drop ;

:setcolor
	4 << colorl + 12 + @
	dup @
	dup $ffff and 'txres !
	16 0>> 'tyres !
	'tritexture ! ;

:svert
	b@+ 1- 3 << v2d + @+ d>xy swap a!+ a!+ | x y
	@ a!+ | z
	b@+ 16 0>> 1- 12 * texl +
	@+ txres
	1.0 */ $ffff and 16 <<  | 0..1 0
	swap @ tyres
	1.0 */ $ffff and
	or
	a!+
	;

:objsolid
	0 zbuffer sw sh * fill
	mark
	here 'v2d !
	verl >b
	nver ( 1? )( 1-
		b@+ b@+ b@+ 4 b+
		project3dz xy>d , neg , ) drop

	facel >b
	nface ( 1? )( 1-
		b> 6 2 << + @ setcolor
		'tritt >a
		svert svert svert
		4 b+
		'tritt tritex
|		dumptri
		) drop
	empty
	;

|-----------------------------------
#xcam 0 #ycam 0 #zcam -50.0
#xr #yr

:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg
|	swap 0 mrotxyz
	mrotx mroty
;

#model

:main
	here 'zbuffer !
	zbuffer framev - 'trizbuffer !
	sw sh * 2 << 'here +!
|	"media/obj/PoliceCar/PoliceCar.obj"
|	"media/obj/dragon.obj"
	"media/obj/mario/mario.obj"
	"media/obj/yumi.obj"
|	"media/obj/cube.obj"
|	"media/obj/boggie/body.obj"
|	"media/obj/monkey.obj"
|	"media/obj/diablo3_pose/diablo3_pose.obj"
|	"media/obj/floor2.obj"
	loadobj 'model !
	objminmax objcentra
	4 fonti
	show clrscr
		cr sp
		'exit dup >esc< rojo " X " btnt sp

		dup ":r%d " blanco print
		"Load Obj" verde print cr cr
		nver " %d vertices" print cr
    	nface " %d caras" print cr

|		dumpcolor

		omode
		freelook
		xcam ycam zcam mtrans

|		objwire
		objsolid


		[ 1.0 'zcam +! ; ] <up>
		[ -1.0 'zcam +! ; ] <dn>
		[ objminmax objcentra ; ] <f1>
		'exit >esc<
		cminiflecha ;

		;

: mark 0 'paper ! 33 main ;
