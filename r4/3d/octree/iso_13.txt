| iso test 13
| PHREDA 2016
| suma de 3 vectores - zbuffer
|---------------------
^r4/lib/gui.txt
^r4/lib/zbuffer.txt
^r4/lib/morton.txt

^r4/lib/trace.txt

#$base
#:$octree
#:$pixels
#$paleta

#ymin #xmin
#ymax #xmax

#nzmin
#zlen

#x1 #y1 #z1	| Nx
#x2 #y2 #z2	| Ny
#x4 #y4 #z4	| Nz

#sx #sy #sz	| suma

|---- hoja en iso,ratio y octree
#veci
#vecr
#veco

#isovec )( 1440
#isovec> 'isovec

:vec-
	-36 'isovec> +! ;

|-------------------------------
:octcolor | oct -- color
    $octree - $pixels + @ ;

:octcolor3 | oct -- color
	$octree - 2 >> dup 2* + 1- $pixels + @ $ffffff and ;

:octcolor8 | oct -- color
	$octree - 2 >> $pixels + c@ $ff and 2 << $paleta + @ ;

:octcolor16 | oct -- color
	$octree - 2/ $pixels + w@ ; |16to32 ;

| x y z -- x y z x2 y2 z2
:t000
	pick2 pick2 pick2 ;
:t001
	isovec> 36 - >r
	pick2 r@+ + pick2 r@+ + pick2 r> @ + ;
:t010
	isovec> 24 - >r
	pick2 r@+ + pick2 r@+ + pick2 r> @ + ;
:t011
	isovec> 36 - >r
	pick2 r@+ + r 8 + @ + pick2 r@+ + r 8 + @ + pick2 r@+ + r> 8 + @ + ;
:t100
	isovec> 12 - >r
	pick2 r@+ + pick2 r@+ + pick2 r> @ + ;
:t101
	isovec> 36 - >r
	pick2 r@+ + r 20 + @ + pick2 r@+ + r 20 + @ + pick2 r@+ + r> 20 + @ + ;
:t110
	isovec> 24 - >r
	pick2 r@+ + r 8 + @ + pick2 r@+ + r 8 + @ + pick2 r@+ + r> 8 + @ + ;
:t111
	isovec> 36 - >r
	pick2 r@+ + r 8 + @ + r 20 + @ + pick2 r@+ + r 8 + @ + r 20 + @ + pick2 r@+ + r 8 + @ + r> 20 + @ + ;

#lsuma t000 t001 t010 t011 t100 t101 t110 t111

:getn | x y z n -- x y z x1 y1 z1
	2 << 'lsuma + @ exec ;

|--------- draw box
:drcara | x y z cara -- x y z
	dup >r $f and getn zop
	r 4 >> $f and getn zline
	r 8 >> $f and getn zline
	r 12 >> $f and getn zline
	r> $f and getn zline
	zpoly
	;

#cara
$0132 $0264 $0154 0
$1320 $1375 $1045 0
$2310 $2046 $2376 0
$3102 $3157 $3267 0
$4576 $4620 $4510 0
$5467 $5137 $5104 0
$6457 $6204 $6237 0
$7645 $7513 $7326 0

:drawcube | x y z oct --
	octcolor zo!
	nzmin 4 << 'cara + >r
	r@+ drcara r@+ drcara r> @ drcara
	3drop ;

:minmax | adr -- min max
	>r 0 0 r@+ -? ( rot + swap )( + )
	8 r+ r@+ -? ( rot + swap )( + )
	8 r+ r> @ -? ( rot + swap )( + ) ;

:getmm | --
	isovec> 36 - minmax 'xmax ! 'xmin !
	isovec> 32 - minmax 'ymax ! 'ymin ! ;

|--- rectangulo lleno
:maxmin | adr -- max min
	>r 0 0 r@+ -? ( + )( rot + swap )
	8 r+ r@+ -? ( + )( rot + swap )
	8 r+ r> @ -? ( + )( rot + swap ) ;

:drawbox | x y z oct --
	octcolor zo!
	getmm
	isovec> 28 - minmax + 2/
	+ zz!
	swap xmin + swap ymin + swap
	xmax xmin - ymax ymin - 2swap
	zb.fill
	;

|-------------------------------
:getcenter | x y z -- x y z xc yc zx	;******
	isovec> 36 - >r
	pick2 r@+ r 8 + @ + r 20 + @ + 2/ +
	pick2 r@+ r 8 + @ + r 20 + @ + 2/ +
	pick2 r@+ r 8 + @ + r> 20 + @ + 2/ + ;

:calcmaskc | xc yc zc -- mask 	;******
	pick2 x1 * pick2 y1 * + over z1 * + +? ( 1 )( 0 ) nip >r
	pick2 x2 * pick2 y2 * + over z2 * + +? ( 2 r+ ) drop
	rot x4 * rot y4 * + swap z4 * + +? ( 4 r+ ) drop
	r> ;


:calco |  x y z -- x y z mask
|	getcenter calcmaskc ;
|:a
	pick2 x1 * pick2 y1 * + over z1 * + +? ( 1 )( 0 ) nip
	pick3 x2 * pick3 y2 * + pick2 z2 * + +? ( drop 2 + )( drop )
	pick3 x4 * pick3 y4 * + pick2 z4 * + +? ( drop 4+ )( drop )
	;

:2/a | a -- b
|	2/ ;
	dup 31 >> 1 and swap over neg xor over + 2/ over neg xor + ;

:2/b | a -- b c
|	dup 2/ swap over - ;
	dup dup 31 >> 1 and swap over neg xor over + 2/ 1+ over neg xor +
	swap over - ;

|-------------------------------------
| x y z n m -- x y z n m x2 y2 z2
:c000
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick4 pick4 pick4 ;
:c001
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;
:c010
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;
:c011
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @+ 2/b 'sz +! r!+
	@+ 2/a r!+ @+ 2/a r!+ @ 2/a r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;
:c100
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @ 2/b 'sz ! r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;
:c101
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @ 2/b 'sz +! r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;
:c110
	isovec> dup >r 36 -
	@+ 2/a r!+ @+ 2/a r!+ @+ 2/a r!+
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @ 2/b 'sz +! r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;
:c111
	isovec> dup >r 36 -
	@+ 2/b 'sx ! r!+ @+ 2/b 'sy ! r!+ @+ 2/b 'sz ! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @+ 2/b 'sz +! r!+
	@+ 2/b 'sx +! r!+ @+ 2/b 'sy +! r!+ @ 2/b 'sz +! r!+
	r> 'isovec> !
	pick4 sx + pick4 sy + pick4 sz + ;

#lsumac c000 c001 c010 c011 c100 c101 c110 c111

:child-oct | x y z node bitm nro place -- x y z node bitm xn yn zn noct
	1- pick2 and popcnt 2 << pick3 +	| x y z node bitm nro nnode
	>r 2 << 'lsumac + @ exec r>			| x y z node bitm xn yn zn nnode
	;

:oct++ | adr -- adr bitmask
	@+ dup 8 >> 2 << rot + swap $ff and ;

:drawpoint1 | x y z oct --
	octcolor zo!
	ymax ymin - 0? ( drop zb! vec- ; )
	1+ zbh! vec- ;

:drawpoint2 | x y z oct --
	octcolor zo!
	xmax xmin - 1+ zbw! vec- ;

:viewi | x y z node --
	$pixels >=? ( veci exec ; )
	>r
    getmm
    xmax xmin - 0? ( drop r> drawpoint1 ; )	| w
    ymax ymin - 0? ( 2drop r> drawpoint2 ; ) | w h
	pick4 pick4 pick4 zb.occ
	0? ( rdrop 4drop vec- ; ) drop
	r>
	oct++
	nzmin 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 1 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 2 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 4 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 3 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 5 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 6 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nzmin 7 xor 1 over << pick2 nand? ( 2drop )( child-oct viewi )
	nip 4drop
	vec-
	;

|-----------------------
:isonow | x y z oct --
	>r isovec> >r
	1 getn p3di r!+ r!+ r!+
	2 getn p3di r!+ r!+ r!+
	4 getn p3di r!+ r!+ r!+
	r> 'isovec> !
	p3dz
	isovec> 36 - >r
	r @ pick3 - r!+	r @ pick2 - r!+ r @ over - r!+
	r @ pick3 - r!+	r @ pick2 - r!+ r @ over - r!+
	r @ pick3 - r!+	r @ pick2 - r!+ r @ over - r> !
	r> viewi vec- ;

:isonow1
	>r
	p3dz
	isovec> 36 - >r
	r@+ r@+ r@+ p3di -12 r+ r!+ r!+ r!+
	r@+ r@+ r@+ p3di -12 r+ r!+ r!+ r!+
	r@+ r@+ r@+ p3di -12 r+ r!+ r!+ r!+
	rdrop
	r>	viewi ;
|---------------- search iso ratio
:getz | x y z node -- Z
    isovec> 28 - minmax swap - 2/ pick2 + ;

:viewr | x y z node --
	>r calco 'nzmin ! r>
	getz clz zlen <=? ( drop isonow ; ) drop |***** <=?
	$pixels >=? ( vecr exec ; )
	oct++
	1 'zlen +!
	nzmin >r
	r 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r 1 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r 2 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r 4 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r 3 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r 5 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r 6 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	r> 7 xor 1 over << pick2 nand? ( 2drop )( child-oct viewr )
	nip 4drop
	-1 'zlen +!
	vec- ;

|----------- search cube in screen
:culling | x y z -- cull
	2/ | achica...
	1 <? ( $10 )( 0 ) >r
	swap -? ( neg <? ( $1 r+ ) )( <? ( $2 r+ ) )
	swap -? ( neg <? ( $4 r+ ) )( <? ( $8 r+ ) )
	drop r> ;

:cull1 | x y z -- cull
	culling dup 8 << or ;

:culln | xyz -- culla cullo
	culling dup 8 << $ff or ; |rot and or ;

:cullingcalc | x y z node -- x y z node aocull
	>r
	0 getn cull1 >r
	1 getn culln r> or and >r
	2 getn culln r> or and >r
	3 getn culln r> or and >r
	4 getn culln r> or and >r
	5 getn culln r> or and >r
	6 getn culln r> or and >r
	7 getn culln r> or and
	r> swap ;

| idea-----------------------------


:ideacull | x y z node -- x y z node 0(out)/-1(in)/1(cut)

	isovec> 28 - minmax	| zmax zmin
	- pick2 + | zmax
	1 <? ( 0 nip ; ) drop

|	pick3 pick2 + 1 >? (

	isovec> 36 - minmax	 'xmax ! 'xmin !
	pick3 xmin + pick2 >? ( drop -1 ; )
	pick3 xmax + pick2 neg <? ( drop -1 ; )
	isovec> 32 - minmax	 'ymax ! 'ymin !
	pick2 ymin + pick2 >? ( drop -1 ; )
	pick2 xmax + pick2 neg <? ( drop -1 ; )

	;

|----------------------
:viewo | x y z node --

	cullingcalc
	0? ( drop viewr ; )
	$ff00 and? ( nip 4drop vec- ; )
	drop

|	boxcull 0? ( drop viewr ; ) -? ( nip 4drop vec- ; ) drop

	$pixels >=? ( veco exec ; )

	>r calco r> swap >r
	1 'zlen +!
	oct++
	r 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r 1 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r 2 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r 4 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r 3 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r 5 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r 6 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	r> 7 xor 1 over << pick2 nand? ( 2drop )( child-oct viewo )
	nip 4drop
	-1 'zlen +!
	vec- ;

|--------- inicializo
:drawo | --
	1.0 clz 4 - 'zlen !
	-1 'nzmin !

	-0.5 -0.5 -0.5 transform
	-0.5 -0.5  0.5 transform
	pick3 - 'z1 ! pick3 - 'y1 ! pick3 - 'x1 !
	-0.5  0.5 -0.5 transform
	pick3 - 'z2 ! pick3 - 'y2 ! pick3 - 'x2 !
	 0.5 -0.5 -0.5 transform
	pick3 - 'z4 ! pick3 - 'y4 ! pick3 - 'x4 !

	'isovec >r
	x1 r!+ y1 r!+ z1 r!+
	x2 r!+ y2 r!+ z2 r!+
	x4 r!+ y4 r!+ z4 r!+
	r> 'isovec> !

	0 0 0 transform	| origen
	0 0 -255 transform pick3 - 'z1 ! pick3 - 'y1 ! pick3 - 'x1 !
	0 -255 0 transform pick3 - 'z2 ! pick3 - 'y2 ! pick3 - 'x2 !
	-255 0 0 transform pick3 - 'z4 ! pick3 - 'y4 ! pick3 - 'x4 !
	3drop

	$octree viewo ;

|-------- octree in octree
:vecis	drawcube vec- ; | drawbox
:vecrs	isonow ;
:vecos	isonow ;

:vecio 	|getoct viewi getocti ;
:vecro	|getoct viewr getocti ;
:vecoo	|getoct viewo getocti
	;

#vecsim	'vecis 'vecrs 'vecos 0 'vecio 'vecro 'vecoo 0

:setvec | m --
	$100 and 6 >>
	2 << 'vecsim + >r
	r@+ 'veci ! r@+ 'vecr ! r> @ 'veco !
	;

:adjustmem | octree --
	dup '$base !
	dup 28 + '$octree !
	@+ setvec
	@ $octree + '$pixels !
	;

#opila )( 64
#opila> 'opila

:getoct | octree -- octree
	$base opila> !+ 'opila> !
	$octree - $pixels + @
	2 << $base +
	adjustmem
	$octree ;

:getocti | --
	-4 'opila> +! opila> @
	adjustmem ;

|--------- exportadas
::drawoctree | moctree --
	adjustmem
	drawo ;

::load3do | "" -- moctree
	here dup rot load 'here ! ;

|::voxelcuad 'drawbox 'dbox ! ;
|::voxelbox 'drawboxd 'dbox ! ;
|::voxelboxc 'drawboxc 'dbox ! ;

|-------------
#xcam 0 #ycam 0 #zcam 2.0

|-------------
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty
	;

|-------------
:zdraw
	0 0 setxy
	zb >r
	sh ( 1? )( 1-
		sw ( 1? )( 1-
			r@+
			$7fffffff <>? ( drop r zbo + @ )( 0 nip )
			|$7fffffff =? ( 0 nip )( $ff00 and )
			px!+
			) drop
		) drop rdrop ;

|-------------
:3dop transform p3d op ;
:3dline transform p3d line ;

#sizx #sizy #sizz

:drawz | z --
	sizx neg sizy neg pick2 3dop
	sizx sizy neg pick2 3dline
	sizx sizy pick2 3dline
	sizx neg sizy pick2 3dline
	sizx neg sizy neg rot 3dline ;

:drawl | x1 x2 --
	2dup sizz neg 3dop sizz 3dline ;

:box3d | sx sy sz --
	'sizz ! 'sizy ! 'sizx !
	sizz neg drawz sizz drawz
	sizx neg sizy neg drawl sizx sizy neg drawl
	sizx sizy drawl sizx neg sizy drawl
	;

#Ocaballo
#Omario
#Oluigi
#Oearth

#fps
#fpsc
#mseca

:main
	mark

	Omode
	sw sh zb.ini

|	"media/3do/luigi.3do" load3do 'Ocaballo !
	"media/3do/ShockTrooper.3do" load3do 'Omario !
	"media/3do/ShockTrooper.3do" load3do 'Oluigi !
|	"media/3do/horse1.3do" load3do 'Oearth !

	33
	show guistart scr home |clrscr

|	    matini
		omode
		freelook
		xcam ycam zcam mtrans

		zb.clear
|		Oluigi drawoctree
		Omario drawoctree
		zdraw

|        verde 0.5 0.5 0.5 box3d

		1 'fpsc +!

		verde fonti
		dup "%d " print cr
		msec fps over mseca - "%d ms fps:%d" print cr 'mseca !

		[ -0.01 'zcam +! ; ] <up>
		[ 0.01 'zcam +! ; ] <dn>
		[ -0.01 'xcam +! ; ] <le>
		[ 0.01 'xcam +! ; ] <ri>
		[ -0.01 'ycam +! ; ] <pgup>
		[ 0.01 'ycam +! ; ] <pgdn>

|		[ Oluigi 'Onow ! ; ] <f1>
|		[ Omario 'Onow ! ; ] <f2>
|		[ Ocaballo 'Onow ! ; ] <f3>
|		[ Oearth 'Onow ! ; ] <f4>

		'exit >esc< cminiflecha
		1000 .mseg .restart
		fpsc 'fps ! 0 'fpsc !
		;

: main ;

