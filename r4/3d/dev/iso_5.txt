| PHREDA 2017
| Solo ISO, ray casting test
|--------------------
^r4/lib/gui.txt
^r4/lib/morton.txt
^r4/lib/zbuffer.txt
^r4/lib/zoom.txt

^r4/lib/trace.txt

#oclon
#oclon2

#x0 220 #y0 200 #z0 100
#x1 300 #y1 180 #z1 150
#x2 280 #y2 220 #z2 200
#x3 240 #y3 300 #z3 200

|#x0 220 #y0 200 #z0 100
|#x1 225 #y1 205	#z1 150
|#x2 225 #y2 195 #z2 200
|#x3 220 #y3 205 #z3 200

| 32*niveles
#ivecpos )( 320

#$base
#$magic
#$octree
#$pixels
#$paleta

#nzmin 2
#szm 5

:drawaxis
	violeta x0 y0 4 box
	azul x0 y0 op x1 y1 2dup line 4 box
	rojo x0 y0 op x2 y2 2dup line 4 box
	verde x0 y0 op x3 y3 2dup line 4 box
	;

|--------------------------------------
:3do! | octree --
	dup '$base !
	dup 28 + '$octree !
	@+ '$magic !
	@ $octree + '$pixels !
	;

:octcolor | oct -- color
    $octree - $pixels + @ ;

::oct++ | adr -- adr bitmask
	@+ dup 8 >> 2 << rot + swap $ff and ;

|----------------------------- rasterize
#xmin
#ymin
#zmin

#norden
#lenx #leny #lenz
#ilev
#blev )( 120

#nowz
#nowzbuf
#advzbuf

#stacko )( 1024
#stacko> 'stacko

:stack@ | -- top
	-4 'stacko> +! stacko> @ ;

:stack2@ | -- a b
	stacko> 8 - dup 'stacko> !
	@+ swap @ swap ;

:stack! | top --
	stacko> !+ 'stacko> ! ;

:stack2! | a b --
	stacko> !+ !+ 'stacko> ! ;


:colordot	octcolor px!+ ;
:skipdot    1 px+! ;

:colordotr 	octcolor z0 'nowzbuf !+ zbo + ! ;
:skipdotr	4 'nowzbuf +! ;

#imask $7ff7fdff $3ff3fcff $1ff1fc7f $0ff0fc3f $07f07c1f $03f03c0f $01f01c07 $00f00c03 $00700401

:packxyz | x y z -- zyx
	zmin - 20 <<
	swap ymin - 10 << or
	swap xmin - or ;

:calpaso | nro vec val -- nro vec nval
	pick2 >> dup $00100401 and swap 2/
	pick3 2 << 'imask + @ and + ;

|-----------------------------------------
#maxlev
#xmask )( 2048	| 512 max
#ymask )( 2048
#yxvec )( 64

|---- full
:childxy- | lev norden yx child -- lev norden yx+
	2 << pick3 5 << + 'ivecpos + @
|	2 << 'ivecpos + @ pick3 >> pick3 1- 2 << 'imask + @ and
	+ ;

:childxy+ |  lev yx child -- lev yx-
	2 << pick2 1+ 5 << + 'ivecpos + @
|	2 << 'ivecpos + @ pick2 1+ >> pick2 2 << 'imask + @ and
	- ;

:dnlevel | xy lev -- yx norden lev
	stack@ rot	| lev norden yx
	over $7 and childxy- 	| lev norden yxo
	swap 4 >> rot 1-		| yxo norden lev
	;

:nextchild | norden mask -- norden / -1
	( 1 pick2 $7 and << | hijo
		and? ( drop ; )
		swap 4 >> -1 <>? )( swap ) nip ;

:getyxmask | xy lev norden -- xy lev norden yxmask
	over 3 << 'yxvec +
	@+ pick4 10 >> $3ff and + c@
	swap @ pick4 $3ff and + c@ and ;

:search | xy lev norden -- yx norden lev
	getyxmask 					| xy lev norden yxmask
|	0? ( 2drop dnlevel ; )
	nextchild					| xy lev norden/-1
	-1 =? ( drop dnlevel ; )	| xy lev norden
	dup stack!					| xy lev norden
	rot swap $7 and				| lev xy hijo
	childxy+					| lev xy-
	norden rot 1+
	;

:rayfull | y x --
	'stacko 'stacko> !
	over 10 << over or	| yx
	norden 0			| yx norden lev
	( maxlev <? )( swap	| yx lev norden
	    search			| yx norden lev
		-? ( 3drop 1 px+! ; )
		) 3drop
	ink@ px!+ ;

:raytest
	over 10 << over or	| yx
	0 0 getyxmask
	0? ( $ff0000 or )
	px!+
	3drop ;

:drawf | x y z --
	xmin ymin setxy
	sw lenx -
	0 ( leny <? )(
		0 ( lenx <? )(
			rayfull
|			raytest
			1+ ) drop
		over px+!
		1+ ) 2drop ;

|-------------------------------
:.h
	$ff and $10 <? ( "0%h" )( "%h" ) print ;

:dm
	( @+ 1? )(
		over @ swap
		( over <? )( c@+ .h "." print ) 2drop
		cr ) 2drop ;

:dumpmask
|	'xmask lenx ( 1? )( 1- swap c@+ .h swap ) 2drop cr
|	'xmvec dm cr
|	'ymask leny ( 1? )( 1- swap c@+ .h swap ) 2drop cr
|	'ymvec dm cr
	;

|-------------------------------
:fillx | child v x -- child
	'xmask +
	lenx 2/ ( 1? )( 1- | child v xmin len
		pick3 pick2 c+!
		swap 1+ swap ) 2drop ;

:filly | child y -- child
	'ymask +
	leny 2/ ( 1? )( 1- | child ymin len
		pick2 pick2 c+!
		swap 1+ swap ) 2drop ;

:calclevels | cnt mask vec --
	>r dup	| c xo xo
	pick2 2 << +	| c xo xd r:vv
	(	over r!+	| c xo xd r:vv
		4 r+
		pick2 ( 1? )( 1- >r			| c xo xd c
			swap @+
			dup $ff00ff and swap 8 >> or $ff00ff and dup 8 >> or
			rot	w!+					| c xo xd
			r> ) drop				| c xo xd
		0 swap w!+	| clear out of limits
		nip dup pick2 1+ 2* - swap		| calcula origen otra vez
		rot 2/ 1? )( rot rot )      | xo xd c
	over r!+ |4 r+
|	pick2 @ dup $ff00ff and swap 8 >> or $ff00ff and dup 8 >> or
|	rot w!+
| 	r!+
	3drop rdrop ;

:calcmask
	'xmask lenx 2 >> 1+ ( 1? )( 1- 0 rot !+ swap ) 2drop
	'ymask leny 2 >> 1+ ( 1? )( 1- 0 rot !+ swap ) 2drop

	'ivecpos >r
	$1 ( $100 <? )( r@+
		dup $3ff and dup 2/ - fillx | child xmin
		10 >> $3ff and dup 2/ - filly
|		dup $3ff and 2/ fillx | child xmin
|		10 >> $3ff and 2/ filly
		2* ) drop rdrop

	lenx 3 + 2 >> 'xmask 'yxvec 4+ calclevels
	leny 3 + 2 >> 'ymask 'yxvec calclevels
	;

:drawfull | color --
	ink |zo!

	0 0 x1 x0 - -? ( rot + swap )( + )
	x2 x0 - -? ( rot + swap )( + )
	x3 x0 - -? ( rot + swap )( + )
	over - 1+ 'lenx ! x0 + 'xmin !
	0 0 y1 y0 - -? ( rot + swap )( + )
	y2 y0 - -? ( rot + swap )( + )
	y3 y0 - -? ( rot + swap )( + )
	over - 1+ 'leny ! y0 + 'ymin !
	0 0 z1 z0 - -? ( rot + swap )( + )
	z2 z0 - -? ( rot + swap )( + )
	z3 z0 - -? ( rot + swap )( + )
	over - 1+ 'lenz ! z0 + 'zmin !

	30 lenx leny min clz - 'maxlev ! | -2

	'ivecpos >r
	x0 y0 z0 packxyz r!+
	x1 y1 z1 packxyz r!+
	x2 y2 z2 packxyz r!+
	x1 x2 + x0 -
	y1 y2 + y0 -
	z1 z2 + z0 - packxyz r!+
	x3 y3 z3 packxyz r!+
	x3 x1 + x0 -
	y3 y1 + y0 -
	z3 z1 + z0 - packxyz r!+
	x3 x2 + x0 -
	y3 y2 + y0 -
	z3 z2 + z0 - packxyz r!+
	x3 x1 + x0 - x2 + x0 -
	y3 y1 + y0 - y2 + y0 -
	z3 z1 + z0 - z2 + z0 - packxyz r!+
	0 ( maxlev <? )(
		'ivecpos
		@+ calpaso r!+
		@+ calpaso r!+
 		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		drop
		1+ ) drop
	rdrop

	calcmask
	szm 'nzmin !
	nzmin 0
	over %1000 or or
	over 1 xor %1000 or 4 << or
	over 2 xor %1000 or 8 << or
	over 4 xor %1000 or 12 << or
	over 3 xor %1000 or 16 << or
	over 5 xor %1000 or 20 << or
	over 6 xor %1000 or 24 << or
	swap 7 xor %1000 or 28 << or
|	dup $77777777 and "%h" print
	'norden !
	drawf
	;

|---------------
:childxy | lev xy noc hijo -- lev xy noc sxsy
	2 << 'ivecpos + @ pick3 1+ >>
	pick3 2 << 'imask + @ and ;

:childxy- | lev norden oc xy hijo --  lev norden noc sxsy
	2 << 'ivecpos + @ pick4 1+ >>
	pick4 2 << 'imask + @ and
	 + ;

:dnlevel | lev xy  -- yx oc norden lev
	stack2@ rot	| lev norden oc yx
	pick2 $7 and childxy- 	| lev norden oc yxo
	swap 2swap				| yxo oc lev norden
	4 >> swap 1- ;

:nextchild | norden mask -- norden / -1
	( 1 pick2 $7 and << | hijo
		and? ( drop ; )
		swap 4 >> -1 <>? )( swap ) nip ;

:search | lev norden xy oc -- yx oc norden lev
	rot getyxmask | lev xy oc norden yxmask
	pick2 @ and			| lev xy oc norden bitmask
|	0? ( 2drop nip dnlevel ; )
	nextchild					| lev xy oc norden/-1
	-1 =? ( 2drop dnlevel ; )	| lev xy oc norden
	dup $7 and >r	| lev xy oc norden  r:hijo
	over stack2!	| lev xy oc  r:hijo
    @+ dup 1 r << 1- and popcnt 2 << swap 8 >> 2 << + +		| lev xy noc
	r> childxy			| lev xy noc sxy
	rot - swap rot 		| yxn noc lev
	1+ norden swap		| yxn noc norden lev
	;

:raycast | y x octree -- y x
	'stacko 'stacko> !
	pick2 10 << pick2 or	| oc yx
	swap norden 0			| yx oc norden lev
	( maxlev <? )( swap 2swap	| lev norden xy oc
	    $pixels >=? ( colordot 3drop ; )
	    search					| yx ox norden lev
		-? ( 4drop skipdot ; )
		) 2drop nip
	colordot ;

:drawi
	xmin ymin setxy
	sw lenx -
	0 ( leny <? )(
		0 ( lenx <? )(
			pick3 raycast
			1+ ) drop
		over px+!
		1+ ) 3drop ;

:drawiso | octree --
	3do!

	0 0 x1 x0 - -? ( rot + swap )( + )
	x2 x0 - -? ( rot + swap )( + )
	x3 x0 - -? ( rot + swap )( + )
	over - 1+ 'lenx ! x0 + 'xmin !
	0 0 y1 y0 - -? ( rot + swap )( + )
	y2 y0 - -? ( rot + swap )( + )
	y3 y0 - -? ( rot + swap )( + )
	over - 1+ 'leny ! y0 + 'ymin !
	0 0 z1 z0 - -? ( rot + swap )( + )
	z2 z0 - -? ( rot + swap )( + )
	z3 z0 - -? ( rot + swap )( + )
	over - 1+ 'lenz ! z0 + 'zmin !
	30 lenx leny min clz - 'maxlev ! | -2
	'ivecpos >r
	x0 y0 z0 packxyz r!+
	x1 y1 z1 packxyz r!+
	x2 y2 z2 packxyz r!+
	x1 x2 + x0 -
	y1 y2 + y0 -
	z1 z2 + z0 - packxyz r!+
	x3 y3 z3 packxyz r!+
	x3 x1 + x0 -
	y3 y1 + y0 -
	z3 z1 + z0 - packxyz r!+
	x3 x2 + x0 -
	y3 y2 + y0 -
	z3 z2 + z0 - packxyz r!+
	x3 x1 + x0 - x2 + x0 -
	y3 y1 + y0 - y2 + y0 -
	z3 z1 + z0 - z2 + z0 - packxyz r!+
	0 ( maxlev <? )(
		'ivecpos
		@+ calpaso r!+
		@+ calpaso r!+
 		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		@+ calpaso r!+
		drop
		1+ ) drop
	rdrop
	calcmask
	szm 'nzmin !
	nzmin 0
	over %1000 or or
	over 1 xor %1000 or 4 << or
	over 2 xor %1000 or 8 << or
	over 4 xor %1000 or 12 << or
	over 3 xor %1000 or 16 << or
	over 5 xor %1000 or 20 << or
	over 6 xor %1000 or 24 << or
	swap 7 xor %1000 or 28 << or
	'norden !
	$octree drawi
	;

|--------------------------------
:drawxm
	c@+
	$1 ( $100 <? )(
		over and? ( $ff0000 )( 0 ) px!+
		sw 1- px+!
		2* ) 2drop ;

:drawym
	c@+
	$1 ( $100 <? )(
		over and? ( $ff0000 )( 0 ) px!+
		2* ) 2drop ;

:drawrules
|	'xmask
	'yxvec 4+ @
	0 ( lenx <? )( swap
    	over xmin + ymin 10 - setxy drawxm
		swap 1+ ) 2drop
|	'ymask
	'yxvec 4+ @
	0 ( leny <? )( swap
		xmin 10 - pick2 ymin + setxy drawym
		swap 1+ ) 2drop
	;

|--------------------------------
:getnn | child -- x y
	2 << 'ivecpos + @
	dup $3ff and xmin +
	swap 10 >> $3ff and ymin +
	;

:drawaxisfull
	verde
	0 getnn op
	1 getnn line
	3 getnn line
	2 getnn line
	0 getnn line

	4 getnn op
	5 getnn line
	7 getnn line
	6 getnn line
	4 getnn line
	;

|--------------------------------
:load3do | "" -- moctree
	here dup rot load 'here ! ;

#ac

:in? | x y xx yy -- x y 1/0
	pick2 - dup * swap
	pick3 - dup * swap +
	32 >? ( 0 nip ) ;

:dn
	xymouse
	x0 y0 in? 1? ( 'x0 'ac ! 3drop ; ) drop
	x1 y1 in? 1? ( 'x1 'ac ! 3drop ; ) drop
	x2 y2 in? 1? ( 'x2 'ac ! 3drop ; ) drop
	x3 y3 in? 1? ( 'x3 'ac ! 3drop ; ) drop
	2drop
	0 'ac ! ;

:movem
	ac 0? ( drop ; )
	xymouse pick2 4+ ! swap ! ;

:zdraw
	0 0 setxy
	zb >r
	sh ( 1? )( 1-
		sw ( 1? )( 1-
			r@+ $7fffffff <>? ( drop r zbo + @ )
			px!+
			) drop
		) drop rdrop ;

|----------------------------------
#xcam 0 #ycam 0 #zcam 1.6

#mseca

:main
	mark
	"media/3do/xwing.3do"
|	"media/3do/tie fighter.3do"
|	"media/3do/mario.3do"
|	"media/3do/8x8x8.3do"
	load3do 'Oclon !
	sw sh zb.ini
	Omode
	33
	show0 clrscr

|		matini
|		xcam ycam zcam mtrans

|		zb.clear
|		Oclon drawioct
|		Oclon2 drawioct
|		zdraw

		msec 'mseca !

|		Oclon drawiso
		$ff00 drawfull

|        drawrules

		blanco
|		dump2

		dup "%d" print cr
		maxlev "maxlev %d" print cr
		msec mseca - "%d" print cr
		lenx leny "leny %d lenx %d" print cr

|        30 sw 128 - 0 xmin 10 - ymin 10 - zoomx4

|		'ivecpos >r 8 ( 1? )( 1- r@+ dup 10 >> $3ff and swap $3ff and "%d %d " print cr ) drop rdrop
|		dumpmask
        drawaxis
|        drawaxisfull
		'dn 'movem guiDnMove

        [ 1 'x1 +! ; ] <ri>
        [ -1 'x1 +! ; ] <le>
		[ szm 1+ 7 and 'szm ! ; ] <f1>
		'exit >esc< cminiflecha
		;

: main ;

