| PHREDA 2015
| Test ISO, correccion numerica
| Ideas para mejorar el ultimo nivel
|--------------------
^r4/lib/gui.txt
^r4/lib/morton.txt
^r4/lib/mfbuffer.txt

^r4/lib/trace.txt

#$base
#$magic
#:$octree
#:$pixels
#$paleta

#ymin #xmin
#ymax #xmax

#nzmin
#zlen

#octvert )( 4096
#octvert> 'octvert
#ilevel 0

#wiso #wison
#hiso #hison

#ivecpos )( 64
#sizelevel )( 64

#nodosr
#nodosi
#nodoso

#x0 #y0 #z0	| centro
#x1 #y1 #z1	| Nx
#x2 #y2 #z2	| Ny
#x4 #y4 #z4	| Nz

:calcmask | -- mask
	x1 x0 * y1 y0 * + z1 z0 * + +? ( 1 )( 0 ) >r drop
	x2 x0 * y2 y0 * + z2 z0 * + +? ( 2 r+ ) drop
	x4 x0 * y4 y0 * + z4 z0 * + +? ( 4 r+ ) drop
	r> ;

|-------------------------------
:octcolor | oct -- color
    $octree - $pixels + @ ;

:octcolor3 | oct -- color
	$octree - 2 >> dup 2* + 1- $pixels + @ $ffffff and ;

:octcolor8 | oct -- color
	$octree - 2 >> $pixels + c@ $ff and 2 << $paleta + @ ;

:octcolor16 | oct -- color
	$octree - 2/ $pixels + w@ ; |16to32 ;

|-------------------------------
:drawpoint | x y oct --
	octcolor rot rot maskpxyo ;

:drawpoint1 | x y oct --
	hison 0? ( drop drawpoint ; )
	swap octcolor ink	| x y h
	over + maskfpy ;

:drawpoint2 | x y oct --
	octcolor ink
	wison pick2 + maskfpx ;

|---- quad cube
:drawbox | x y oct --
	octcolor ink
	wison pick2 + hison pick2 +
	maskfpxy ;

|---- real cube
#faces (
0 1 3 2 0 2 6 4 0 1 5 4
1 3 2 0 1 3 7 5 1 0 4 5
2 3 1 0 2 0 4 6 2 3 7 6
3 1 0 2 3 1 5 7 3 2 6 7
4 5 7 6 4 6 2 0 4 5 1 0
5 4 6 7 5 1 3 7 5 1 0 4
6 4 5 7 6 2 0 4 6 2 3 7
7 6 4 5 7 5 1 3 7 3 2 6
)

:getn | x y a id -- x y a x y
	3 << 'ivecpos + >r
	pick2 r@+ ilevel >> + pick2 r> @ ilevel >> + ;
|	pick2 r@+ ilevel 1- >> 1+ 2/ + pick2 r> @ ilevel 1- >> 1+ 2/ + ; | level=0!!

:aclara
    ink@ $f0f0f colavg ink ;

:dface | adr -- adr'
	c@+ getn 2dup >r >r maskop
	c@+ getn maskline
	c@+ getn maskline
	c@+ getn maskline
	r> r> maskline
	maskpoly ;

:drawboxd | x y oct --
	octcolor ink
	nzmin 2 << dup 2* + 'faces +
	dface aclara dface aclara dface
	3drop
	;

|---- 1 color cube
#contorno (
1 5 4 6 2 3 0 0
0 2 3 7 5 4 0 0
0 1 3 7 6 4 0 0
0 2 6 7 5 1 0 0
0 2 6 7 5 1 0 0
0 1 3 7 6 4 0 0
0 2 3 7 5 4 0 0
1 5 4 6 2 3 0 0
)

:drawboxc | x y oct --
	octcolor ink
	nzmin 3 << 'contorno +
	c@+ getn 2dup >r >r maskop
	c@+ getn maskline
	c@+ getn maskline
	c@+ getn maskline
	c@+ getn maskline
	c@+ getn maskline 3drop
	r> r> maskline
	maskpoly ;

#dbox 'drawbox

|-------- octree in octree
::adjustmem | octree --
	dup '$base !
	dup 28 + '$octree !
	@+ '$magic !
	@ $octree + '$pixels !
	;

#opila )( 1024
#opila> 'opila

:getoct | octree -- octree
	$base opila> !+ 'opila> !
	$octree - $pixels + @
	2 << $base +
	adjustmem
	$octree
	;

:getocti | --
	-4 'opila> +! opila> @
	adjustmem
	;

::oct++ | adr -- adr bitmask
	@+ dup 8 >> 2 << rot + swap $ff and ;

|.............................................................
:childi | x y node bitm nro place -- node bitm
	1- pick2 and popcnt 2 << pick3 +	| x y node bitm nro cntchild+node
	>r 3 << 'ivecpos + >r 				| x y node bitm r: ivec newnode
	ilevel 1-                           | x y node bitm il
    wiso over >> 1+ 2/ 'wison !
    hiso over >> 1+ 2/ 'hison !
	pick4 r@+ pick2 >> 1+ 2/ +			| x y node bitm il x
	r> @ rot >> 1+ 2/ pick4 +           |               x  y
	r>                                  | x y node bitm xn yn nnode
	;


:viewi | x y node --
	1 'nodosi +!

	$pixels >=? ( $magic $100 nand? ( drop dbox exec ; ) drop getoct viewi getocti ; )

   	pick2 pick2
	wison 0? ( 3drop drawpoint1 ; ) pick2 +
	hison 0? ( 4drop drawpoint2 ; ) pick2 +
	maskb.rget 0? ( 4drop ; ) drop

	1 'ilevel +!
	oct++

	nzmin 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 1 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 2 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 4 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 3 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 5 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 6 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	nzmin 7 xor 1 over << pick2 nand? ( 2drop )( childi viewi )
	4drop
	-1 'ilevel +!
	;

|:childo | x y nodo nro
|	3 << 'mvector + @  | calc nodo

|... ordenar en zvector los hijos
| 	'zvector @ and? ( 0 childo )
|	'zvector 4+ @ and? ( 1 childo )
|	'zvector >r
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	r@+ and? ( r childi viewi )
|	rdrop
|-----------------------
:3dproj | x y z -- x y
	pick2 over - sw 2/ + $3ff and >r
	rot + 2/ + sh 2/ + $3ff and r>
	;

:id3di | x y z -- y x
	3dproj | x y
	dup 'ymin ! dup 'ymax !
	swap
	dup 'xmin ! dup 'xmax !
	;

:id3d | x y z -- y x
	3dproj | x y
	ymin <? ( dup 'ymin ! )
	ymax >? ( dup 'ymax ! )
	swap
	xmin <? ( dup 'xmin ! )
	xmax >? ( dup 'xmax ! )
	;

:isonow | oct --
	>r octvert> 96 - dup 'octvert> ! >r
	r@+ r@+ r@+ id3di 'ivecpos !+ !+
	r@+ r@+ r@+ id3d rot !+ !+
	r@+ r@+ r@+ id3d rot !+ !+
	r@+ r@+ r@+ id3d rot !+ !+
	r@+ r@+ r@+ id3d rot !+ !+
	r@+ r@+ r@+ id3d rot !+ !+
	r@+ r@+ r@+ id3d rot !+ !+
	r@+ r@+ r> @ id3d rot !+ !

	xmin xmax over - dup 'wison ! 'wiso !
	ymin ymax over - dup 'hison ! 'hiso !

|  	xmin xmax over - 'wison !
|	ymin ymax over - 'hison !
|	hison 16 << wison or
|	'sizelevel >r
|	dup r!+
|	10 ( 1? )( 1- swap
|		dup $10001 + 2/ $7fff7fff and r!+
|		2/ $7fff7fff and
|		swap ) 2drop rdrop

	'ivecpos	| ymin xmin ivec
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !+
	dup @ pick3 - swap !+ dup @ pick2 - swap !
	r> viewi ;



|--------- inicializo
:fillstart | --
	1.0 clz 4 - 'zlen !
	-1 'nzmin !
	'octvert >r
	0.5 0.5 0.5 transform swap rot r!+ r!+ r!+ | 111
	0.5 0.5 -0.5 transform swap rot r!+ r!+ r!+ | 110
	0.5 -0.5 0.5 transform swap rot r!+ r!+ r!+ | 101
	0.5 -0.5 -0.5 transform swap rot r!+ r!+ r!+ | 100
	-0.5 0.5 0.5 transform swap rot r!+ r!+ r!+ | 011
	-0.5 0.5 -0.5 transform swap rot r!+ r!+ r!+ | 010
	-0.5 -0.5 0.5 transform swap rot r!+ r!+ r!+ | 001
	-0.5 -0.5 -0.5 transform swap rot r!+ r!+ r!+ | 000
	r> 'octvert> !

	0 0 0 transform	| origen
	0 0 255 transform pick3 - 'z1 ! pick3 - 'y1 ! pick3 - 'x1 !
	0 255 0 transform pick3 - 'z2 ! pick3 - 'y2 ! pick3 - 'x2 !
	255 0 0 transform pick3 - 'z4 ! pick3 - 'y4 ! pick3 - 'x4 !
	'z0 ! 'y0 ! 'x0 !

	calcmask 'nzmin !
	;

|--------- exportadas

::drawoctree | moctree --
	adjustmem
	fillstart
	$octree isonow ;

::load3do | "" -- moctree
	here dup rot load 'here ! ;

::voxelcuad 'drawbox 'dbox ! ;
::voxelbox 'drawboxd 'dbox ! ;
::voxelboxc 'drawboxc 'dbox ! ;


|-------------
#xcam 0 #ycam 0 #zcam 1.6

|-------------
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx mroty
	;

|-------------
#Ocaballo
#Omario
#Oluigi
#Oearth

#Onow

#fps
#fpsc
#mseca

#largo 200
#ynow

:linea | x largo -- x largo
	over 2* ynow 2* op
	2dup + 2* ynow 2* line
	2dup + 2* ynow 2* 1+ line
	over 2* ynow 2* 1+ line
	;

:reclinea | x largo --
	0? ( 2drop ; )
	verde
	over 2* ynow 2* 2 + op 2dup + 2* ynow 2* 2 +  line
	2/
	rojo
	2 'ynow +!
	2dup
	linea
	reclinea
	dup rot + swap
	linea
	reclinea
	-2 'ynow +! ;

:testprecision
	blanco
	10 'ynow !
	10 largo reclinea
	;
|-----------
:child
	wiso ilevel >> 'wison !
	hiso ilevel >> 'hison !
	;
:child2
    wiso ilevel 1- >> 1+ 2/ 'wison !
    hiso ilevel 1- >> 1+ 2/ 'hison !
    ;

:drawbox | x y --
	wison 0? ( pick2 "%h " allowcr print
				3drop ; )
	hison 0? ( 4drop ; )
	2over rect
	1 'ilevel +!
	2dup
	child rojo drawbox
	over wiso ilevel 1- >> 1+ 2/
|	over wiso ilevel >> 1+
	dup "(%h) " allowcr print
	+
	over hiso ilevel 1- >> 1+ 2/ +

|	over hiso ilevel >> +
	child verde drawbox
	-1 'ilevel +!
	2drop
	;


:testdiv
	xmin wiso + 199 op
	xmin 199 line ;

:testbox
	xmin xmax over -
|	dup "%h " print cr
	dup 'wison ! 'wiso !
	ymin ymax over - dup 'hison ! 'hiso !
	drawbox


	;

:main
	mark
	3dini
    maskb.ini
	"media/3do/clon1.3do" load3do 'Oclon1 !
	33

	200 200 'xmin ! 'ymin !
	216 216 'xmax ! 'ymax !
	show clrscr
		3dini
		freelook
		xcam ycam zcam mtrans

		maskb.clear
		0 'nodoso !
		0 'nodosr !
		0 'nodosi !

|		oNow drawoctree

		1 'fpsc +!

		verde fonti
		dup "%d " print cr
		xmax xmin - "%d" print cr

|       testprecision

		64 alpha
		testbox
		255 alpha
		blanco testdiv
		[ -1 'xmax +! ; ] <le>
		[ 1 'xmax +! ; ] <ri>
		[ -1 'ymax +! ; ] <up>
		[ 1 'ymax +! ; ] <dn>



		'exit >esc< cminiflecha
		1000 .mseg .restart
		fpsc 'fps ! 0 'fpsc !
		;

: main ;

