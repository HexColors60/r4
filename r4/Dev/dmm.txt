| Dynamic Memory Management
| Based on http://www.bradrodriguez.com/papers/ms/pat4th-c.html
| tag : 30 bits size + 1 bit last? block + 1 bit used? block 

^r4/lib/gui.txt

#start | start of dmms space
#ptr 
#tag 

:tag>size | ( tag -- size )
	  tag 2 >> ;

:settag! | ( used? last? size -- )
	 8 - 2 << swap 1 << or or 'tag ! ;

:tags | ( -- )
      tag ptr 4 - !
      tag ptr tag>size + ! ;

:dmminit | ( size -- )
	 0 1 pick2 settag!
	 mark
	 here 4 + dup dup 'ptr ! 'start ! + 'here !
	 tags ;

:drawmms ;
	 
:go clrscr
    mark here "%x" print cr
    $100 dmminit
    here "%x" print cr cr
    tag "%x" print cr
    show
    drawmms
    'exit >esc< ;

: go ;
