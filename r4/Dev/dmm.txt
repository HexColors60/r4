| Dynamic Memory Management
| Based on http://www.bradrodriguez.com/papers/ms/pat4th-c.html
| tag : 30 bits size + 1 bit last? block + 1 bit used? block 

^r4/lib/gui.txt

#start | start of dmm space
#ptr #tag 

| create tag value ( used? last? size -- )
:settag! 8 - 2 << swap 1 << or or 'tag ! ;

:tag>last tag %10 and 1 >> ;

:tag>used tag %1 and ;

:tag>size tag 2 >> ;

:wtags! tag ptr 4 - ! tag ptr tag>size + ! ;

| init dmm system ( size -- )
:dmminit 0 1 pick2 settag!
	 mark here 4 + dup dup 'ptr ! 'start ! + 'here !
	 wtags! ;

:pblock ptr "Mem: %x " print cr
	tag>last "Last: %d" print cr
	tag>used "Used: %d" print cr
	tag>size "Size: %d bytes" print cr cr cr ;

:nextblock tag>size ptr + 8 + 'ptr ! ptr 4 - @ 'tag ! ;

:printdmm 'ptr ! start 4 - @ 'tag !

:printdmmrec pblock tag>last 1? ( drop ; )( drop nextblock printdmmrec ) ;

:debug dup "%d" print cr cr ;

:go $10000 dmminit
    show clrscr
    debug    
    start printdmm
    'exit >esc< ;

: 33 go ;
