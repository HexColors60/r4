| Dynamic Memory Management
| Based on http://www.bradrodriguez.com/papers/ms/pat4th-c.html
| tag : 30 bits size + 1 bit last? block + 1 bit used? block 

^r4/lib/gui.txt

#dmms | start of dmm space
#ptr #tag 

| create tag value ( used? last? size -- )
| 8 bytes are taken from size for two tags
:settag! 2 << swap 1 << or or 'tag ! ;

:tag>last tag %10 and 1 >> ;
:tag>used tag %1 and ;
:tag>size tag 2 >> ;

| <tag><size bytes><tag>
:wtags! tag ptr 4 - ! tag ptr tag>size + ! ;

| init dmm system ( size -- )
:dmminit 0 1 pick2 settag!
	 mark
	 here 4 +
	 dup dup
	 'ptr ! 'dmms ! 4 + + 'here !
	 wtags! ;

:pblock
|	here "HERE: %x" print cr
|	dmms "DMMS: %x" print cr
	ptr "Block ptr: %x " print cr
	ptr 4 - @ "tag1: %x " print cr
|	ptr ptr 4 - @ 2 >> + @ "tag2: %x " print cr
	tag>last tag>used "Used/Last: %d/%d" print cr
	tag>size "Size: %d bytes" print cr cr cr ;

:nextblock tag>size ptr + 8 + 'ptr ! ptr 4 - @ 'tag ! ;

:printdmm dmms 'ptr ! ptr 4 - @ 'tag !

:printdmmrec pblock tag>last 1 =? ( drop ; ) drop nextblock printdmmrec ;

| split ( size -- )
| splits an existing block into two
| 1st block: ptr=(bptr), tag=(used=1,last=0,size)
| 2st block: ptr=(bptr+size+8), tag=(0,btaglast,btagsize-size-12)
:split ptr tag
       over pick3 8 + + 'ptr !
       dup 0 swap %10 and 1 >> rot 2 >> pick4 - 12 - settag! wtags!
       'ptr !
       1 0 rot settag! wtags!
       ptr ;

| full (size -- )
| allocates full block
:full 1 tag>last rot settag! wtags! ptr ;

:allochere tag>size over - 16 >? ( drop split )( drop full ) ;
:trynext tag>last 1 =? ( 2drop -1 ; ) drop nextblock
:allocrec tag>used 1 =? ( drop trynext ; ) drop tag>size >? ( trynext ; ) allochere ;
:alloc dmms 'ptr ! dmms 4 - @ 'tag ! allocrec ;

:debug dup "%d" print cr cr ;

:go $10000 dmminit
    $4000 alloc "----> %x" print cr
    $4000 alloc "----> %x" print cr
    $4000 alloc "----> %x" print cr
    $600 alloc "----> %x" print cr
    $800 alloc "----> %x" print cr
    $1000 alloc "----> %x" print cr
    show clrscr
    debug    
    printdmm
    'exit >esc< ;

: 33 go ;
