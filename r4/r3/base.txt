|r3 base words
|PHREDA 1018
| 64 bits
| c=8 bits, d=32 bits
|-------------

#:r3base
";" "(" ")" "[" "]" "EX" "0?" "1?" "+?" "-?"				| 10
"<?" ">?" "=?" ">=?" "<=?" "<>?" "AN?" "NA?" "BTW?"			| 19
"DUP" "DROP" "OVER" "PICK2" "PICK3" "PICK4" "SWAP" "NIP"	| 27
"ROT" "2DUP" "2DROP" "3DROP" "4DROP" "2OVER" "2SWAP"		| 34
">R" "R>" "R@"												| 37
"AND" "OR" "XOR" "NOT" "NEG"								| 42
"+" "-" "*" "/" "*/"										| 47
"/MOD" "MOD" "ABS" "SQRT" "CLZ"								| 52
"<<" ">>" "0>>" "*>>" "<</"					| 57
"@" "C@" "Q@" "@+" "C@+" "Q@+" 				| 65
"!" "C!" "Q!" "!+" "C!+" "Q!+"				| 71
"+!" "C+!" "Q+!"							| 74
">A" "A>" "A@" "A!" "A+" "A@+" "A!+"		| 81
">B" "B>" "B@" "B!" "B+" "B@+" "B!+"		| 88
"MOVE" "MOVE>" "FILL"						| 91
"CMOVE" "CMOVE>" "CFILL"					| 94
"QMOVE" "QMOVE>" "QFILL"					| 97
"SYSCALL" "SYSMEM"							| 99
0

| 1? --> 0 <>?

::r3basename | nro -- str
	'r3base swap
	( 0 <>? )( 1- swap >>0 swap ) drop ;

:?mac | adr -- nro/-1
	0 'r3base			| adr 0 'r3base
	( 1? )(
		pick2 over =s 1? ( 3drop ; ) drop
		>>0 swap 1+ swap ) 2drop
	-1 ;

|----------------------------------------------------

#token>
#slot
#bit

:,slot | bits nro --
	bit << 'slot +!
	bit +
	32 =? ( slot token> !+ 'token> ! 0 'slot ! 0 )
	'bit ! ;

::iniToken | adr --
	'token> !
	0 'slot ! 0 'bit ! ;

:,lit8 | nro --
	7 << $ff70 and
	$7 or
	16 swap ,slot
	;

:,litr
	;
:,litn
	;

:pMAC | mac --
	$10 +
	8 swap ,slot
	;

:pINC
:pCOM
:pCOD
:pVAR
:pSTR
:pWOR
:pADR
	;


| $1ffffff
| $1ffff
| $1ff
:pNUM | adr -- adr'
	str>nro
	-256 >=? ( 255 <=? ( ,lit8 ; ) )
	0 >=? ( $1ffffff <=? ( ,litr ; ) )
	-$1ffffff =? ( 0 <=? ( ,litn ; ) )
	;

:?wor
	;

|----------------------------------------------------
::r3token | str -- 'str tok/-error
	( dup c@ $ff and 33 <? )( 0? ( nip ; ) drop 1+ )	| quitar espacios
	$5e =? ( drop pINC ; )		| $5e ^  Include
	$7c =? ( drop pCOM ; )		| $7c |	 Comentario
	$3A =? ( drop pCOD ; )		| $3a :  Definicion
	$23 =? ( drop pVAR ; )		| $23 #  Variable
	$22 =? ( drop pSTR ; )		| $22 "	 Cadena
	$27 =? ( drop 1+ dup dup	| $27 ' Direccion
		?wor 1? ( nip pADR ; ) 2drop
		-1 ; )
	drop
	dup isNro 1? ( drop pNUM ; ) drop	| numero
	dup ?mac 1? ( pMAC ; ) drop	| macro
	?wor 1? ( pWOR ; ) drop		| palabra
 	-1 ;

::r3gen | str -- tokens
	;

::tokeniza | adr -- 0/err
	( r3token
	-? ( ; )
	0? ) ;


|------------------------------

:t0
	;
:t:
:t::
:t#
:t:
:t|
:t^
	;
:tdec
	dup 16 << 23 >> "%h " print
	8 0>> ;

:thex
	7 0>> "%h " print
	0 ;
:tbin
:tfix
:tstr
:twor
:tvar
:tdwor
:tdvar
	;

#tokl
t0 t: t:: t# t: t| t^		| 0 1 2 3 4 5 6
tdec thex tbin tfix tstr    | 7 8 9 a b
twor tvar tdwor tdvar		| c d e f

:tokprint
	$7f and
	$f >? ( $10 - r3basename print sp ; )
	2 << 'tokl + @ exec ;

::tokenprint | str --
	( @+ 1? )(
|		dup "%h-" print
		( dup tokprint 8 0>> 0? ) drop
|		cr
		) 2drop ;

|--------------------------------------

: "22 11 +" tokeniza ;