| r3 compiler
| pass 2 - tokenizer
| PHREDA 2018
|----------------
^./r3base.txt

::,, | n --
	code> !+ 'code> ! ;

:.com
	"|WIN|" =pre 1? ( drop 5 + ; ) drop | Compila para WINDOWS
	>>cr
	;

:.def
	c@+
|	$3A =? ( ) |::
	33 <? ( code> '<<boot ! )
	1 'modo !
	;

:.var
	c@+
|	$23 =? ( ) | ##
	2 'modo !
	;

:.str
	;

:.adr
	;

:.nro
	;

:.base | nro --
	modo 1 >? ( drop ; ) drop

	16 + ,,
	;

:.word
	;

|-----------
:?nro
	;


:wrd2token | str -- str'
	( dup c@ $ff and 33 <? )(
		0? ( nip ; ) drop 1+ )	| trim0
	$5e =? ( drop >>cr ; )	| $5e ^  Include
	$7c =? ( drop .com ; )	| $7c |	 Comentario
	$3A =? ( drop .def ; )	| $3a :  Definicion
	$23 =? ( drop .var ; )	| $23 #  Variable
	$22 =? ( drop .str ; )	| $22 "	 Cadena
	$27 =? ( drop 1+ dup dup	| $27 ' Direccion
		?base 1? ( drop 7 'error ! dup xor ; ) drop
		?word 1? ( nip .adr ; ) 2drop
		1 'error ! dup xor ; )
	drop
	dup ?nro 1? ( drop .nro ; ) drop		| numero
	dup ?base 1? ( .base ; ) drop			| macro
	?word 1? ( .word ; ) drop				| palabra
 	1 'error !
	dup xor ;

:str2token | str -- end
	( compilatoken 0? ) drop ;

::r3-stage-2 | -- err/0
	cntdef allocdic
	0 'modo !
	here dup 'code ! 'code> !
	cnttokens 2 << 'here +!
	'inc ( inc> <? )(
		4+ @+ str2token
		drop
		) drop ;

