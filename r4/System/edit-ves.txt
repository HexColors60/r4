| reanimator.txt
| PHReda Nov2006
|----------------
^r4/lib/gui.txt
^r4/lib/dlg.txt
^r4/lib/vesprite.txt

^r4/lib/dlg.txt
^r4/lib/dlgfile.txt
^r4/lib/dlgcol.txt

^r4/lib/ricons.txt
^inc/ric/fontawesomewebfont.ric

#modo
#color
#xv #yv #sv
#ves 0
#ves>

| inicio x1y1 x2y2 color
#tra 0
#tra>

#lin
#lin>

#xmin #ymin #xmax #ymax
#colp

|----------------------------------
:i.st
	$7fffffff dup 'xmin ! 'ymin !
	-$7fffffff dup 'xmax ! 'ymax ! ;

:a.st | adr --
    d>xy
    ymax >? ( dup 'ymax ! ) ymin <? ( dup 'ymin ! ) drop
    xmax >? ( dup 'xmax ! ) xmin <? ( dup 'xmin ! ) drop
	;

:t0 drop ;
:t1 8 >> 'colp ! ;
:t2 a.st @+ a.st ;
:t3 drop 4+ ; | cen mat
:t4 a.st ;
:t7 a.st @+ a.st @+ a.st ;
:tc 8 >> 'colp ! swap >r xmin ymin xy>d r!+ xmax ymax xy>d r!+ colp r!+ dup r!+ r> swap i.st ;

#lbox t0 t1 t2 t3 t4 t4 t2 t7 t4 t4 t2 t7 tc tc tc tc
:buildtra
	ves> 4+ dup 'tra !
	ves dup rot !+ swap i.st
	( ves> <? )(
     	@+ dup $f and 2 << 'lbox + @ exec
		) drop
	dup 'tra> !
	dup 'lin ! 0 over ! 'lin> ! ;

:rebuild1tra | tra --
	i.st
	4 << tra +
	dup @ ( @+ dup $f and $b <? )(
		2 << 'lbox + @ exec
		) 3drop
	xmin ymin xy>d swap !+
	xmax ymax xy>d swap !
	;


:dumptra
	tra ( tra> <? )( >r
		r@+
		r@+ r@+ gc>xy rot gc>xy
		r@+ ink caja
		"%h " print
		r> ) drop ;


#xf #yf
#xfa #yfa
#cursor
#picktra -1

|---------- punto en poligono
#inside
#po #pa

:dline | p1 p2 --
	2dup gc>xy op gc>xy line ;

:entre | p1 p2 --
|	dline
|	dup d>xy "%f %f" print cr

	over d>x xf pick2 d>x
	<=? ( >=? ( 3drop ; ) )( <? ( 3drop ; ) ) | v1 v2  x1
	over d>x <? ( pick2 d>y rot d>xy 2swap )( pick2 d>y rot d>xy )
	swap pick3 - yf pick3 - * >r	| p1 'x1 'y1 'y2	 r: a | a= x2 x1 - yf y1 - *
	rot xf swap - swap rot - * r>	| p1 b a | b = xf x1 - y2 y1 - *
	>? ( 1 'inside +! )
	2drop ;

:t0 drop ;
:t1 drop 4+ ;
:t4 po -1 =? ( drop dup 'pa ! 'po ! ; )
	over dup 'pa ! 'po ! entre ;
:t5 pa over 'pa ! entre ;
:t6 swap @+ dup pa entre
	rot dup 'pa ! entre ;
:t7 swap @+ swap @+ | n3 n2 adr n1
	dup pa entre 	| n3 n2 adr n1
	rot dup rot entre |	n3 a n2
	rot dup 'pa ! entre ;

#ppo t0 t0 t1 t1 t4 t5 t6 t7 t4 t5 t6 t7


:train? | adr -- 1/0
	0 'inside !
	-1 'po !
	( @+ dup $f and $b <? )(
		2 << 'ppo + @ exec
		) 3drop
	inside 1 and ;


|-------
:dotf | x1 y1 --
	yfix 3 >> 'yf ! xfix 3 >> 'xf ! ;

:indot | x y -- 1/0
	yf - dup * swap xf - dup * +
	32 <=? ( 1 )( 0 ) nip ;

:in? | xm ym xM yM -- 0/1
	rot yf rot rot between -? ( 3drop 0 ; ) drop
	xf swap rot between -? ( drop 0 ; ) drop
	1 ;

:intr
	( tra> <? )( 4+ >r
		r@+ r@+ d>xy rot d>xy
|		in? 1? ( drop r> 12 - tra - 4 >> ; ) drop
		in? 1? ( drop r 12 - @ train? 1? ( drop r> 12 - tra - 4 >> ; ) ) drop
		r> 4+ ) drop
	-1 ;

:intra | x1 y1 -- tra
	dotf tra intr ;

:innext | tra -- tra'
	4 << tra + intr ;

:searchtra
	intra -? ( ; )
	( dup 1+ innext 0 >? )( nip ) drop ;

:2sort | x y -- max min
	over >? ( swap ) ;

|---------------------
:vistall
	sw dup 2/ 'xv !
	sh dup 2/ 'yv !
	min 64 - 'sv ! ;

|----------------------------------
:inid
	xymouse xy>gc 8 or lin !+ 0 over ! 'lin> !
	;
:movd
	xymouse xy>gc 9 or lin> !+ 0 over ! 'lin> !
	;
:upd
	0 'lin> !
	;
:mododraw
	'inid 'movd 'upd guiMap
	negro
	lin vesprite
	;

|----------------------------------
:modovista
	[ xymouse 'yf ! 'xf ! ; ]
	[ xymouse dup yf - 'yv +! 'yf ! dup xf - 'xv +! 'xf ! ;	] guiDnMove
	;

|---------------------------------
:p1 2dup blanco 3 fbox gris 3 box ;
:p2 2dup blanco 3 fdiam gris 3 diam ;

:t0 drop ;
:t1 drop 4+ ;
:t2 dup 'pa ! gc>xy p1 ;
:t3 dup 'pa ! gc>xy p1
	@+ gc>xy p2 ;
:t4 >r @+ >r @+
	gc>xy 2dup op pa gc>xy 2dup line p2 p1
	r> gc>xy 2dup op r> dup 'pa ! gc>xy 2dup line p2 p1 ;

#ltra t0 t0 t1 t1 t2 t2 t3 t4 t2 t2 t3 t4

:drawtra
	( @+ dup $f and $c <? )(
		2 << 'ltra + @ exec
		) 3drop ;

|---------------------------------
:tocanodo | x y -- nro/0
	xymouse 'yf ! 'xf !
	picktra 4 << tra + @
	( @+ dup $f and $b <? )( drop
		gc>xy indot 1? ( drop 4 - ; )
		drop ) 3drop 0 ;

:muevenodo | cursor --
	xymouse xy>gc over @ $f and or swap ! ;

:modoeditne
	[ xymouse searchtra 'picktra ! ; ] guiBtn ;

:modoeditn
	picktra -? ( drop modoeditne ; )
	[ tocanodo 0? ( -1 'picktra ! ) 'cursor ! ; ]
	[ cursor 1? ( muevenodo ; ) drop ; ]
	guiDnMove
	4 << tra + @ drawtra ;

|---------------------------------
:movepoly
	xymouse
	yfix 3 >> dup yf - 'yfa ! 'yf !
	xfix 3 >> dup xf - 'xfa ! 'xf !
	picktra -? ( drop ; )
	4 << tra + @
	( dup @ dup $f and $b <? )(
		swap
		d>xy yfa + swap xfa + swap xy>d
		or swap !+
		) 3drop

	picktra 4 << tra + 4+ dup
	dup @ d>xy yfa + swap xfa + swap xy>d swap !+
	dup @ d>xy yfa + swap xfa + swap xy>d swap !
	@+ gc>xy rot @ gc>xy rot | x1 x2 y2 y1
	2sort 'ymin ! 'ymax !
	2sort 'xmin ! 'xmax !
	;

:escalapoly
	;
:rotapoly
	;

:inpoly | -- 1/0
	xymouse
	ymin ymax between -? ( 2drop 0 ; ) drop
	xmin xmax between -? ( drop 0 ; ) drop
	picktra 4 << tra + @ train? ;

:moveini
	inpoly 0? ( 1- 'picktra ! ; ) drop
	xymouse dotf ;

:searchpoly
    xymouse searchtra dup 'picktra !
    -? ( drop ; )
    4 << tra + 4+
	@+ gc>xy rot @ gc>xy rot | x1 x2 y2 y1
	2sort 'ymin ! 'ymax !
	2sort 'xmin ! 'xmax !
	;

:modoeditp
	picktra -? ( drop 'searchpoly guiBtn ; ) drop
	'moveini |'movepoly
	[ ; ]
	guiDnMove
	negro
	xmin ymin xmax ymax	dotbox
| punto de mover
|	xmax xmin + 2/ ymax ymin + 2/ 4 box

| pundo de x escala
| punto de y escala
| punto de xy escala
	xmax ymax
	p1
| punto de rotar
	;

:delpoly ;
:cpypoly ;
:uppoly ;
:dnpoly ;

|------------------------------------
:btnric | icon vec --
	ink@ >r btne blanco 2-gc drawric 2+gc r> ink ;

:toodraw
	;

:toovista
	'i.zoom_in [ sv 2* 'sv ! ; ] btnric gcdn
	'i.zoom_out [ sv 2/ 'sv ! ; ] btnric gcdn
	'i.resize_full 'vistall btnric gcdn
	;

:tooeditn

	;

:tooeditp
	picktra -? ( drop ; ) drop
	'i.zoom_in 'delpoly btnric gcdn
	'i.zoom_in 'cpypoly btnric gcdn
	'i.zoom_in 'uppoly btnric gcdn
	'i.zoom_in 'dnpoly btnric gcdn
	;


|------- modos
#modos 'mododraw 'modovista 'modoeditp  'modoeditn
#tools 'toodraw 'toovista 'tooeditp 'tooeditn

|----- botonera
#modogui 'mododraw
#modotoo 'toodraw

:setmodo
	dup 'modo ! dup 2 <<
	dup 'modos + @ 'modogui !
	'tools + @ 'modotoo ! ;

:botonmodo | icon nro --
	modo =? ( azul )( negro )
	'setmodo btne
	modo =? ( blanco )( gris )
	drop 8-gc drawric 8+gc gcdn ;

:drawves
	xv yv pos sv qdim
	blanco gc.fbox
	ves vesprite ;

:botonera
	scr home fonti
	azul 2 linesfill blanco cr2
	dup ":r%d VesEditor " printc

   	32 qdim 18 18 pos
	rojo 'exit dup >esc< btne blanco 'i.off drawric gcdn
	'i.pencil 0 botonmodo
	'i.eye_open 1 botonmodo
	'i.bookmark 2 botonmodo
	'i.hand_up 3 botonmodo

|	'i.magic 4 botonmodo
|	gcdn
	verde oscuro
|	'i.undo 0 btnric gcdn
|	'i.repeat 0 btnric gcdn gcdn

    modotoo exec

	sw 26 - 26 pos
	'color btncol
	;

:teclado
	[ sv 5 >> neg 'yv +! ; ] <up>
	[ sv 5 >> 'yv +! ; ] <dn>
	[ sv 5 >> 'xv +! ; ] <ri>
	[ sv 5 >> neg 'xv +! ; ] <le>
	[ sv 2* 'sv ! ; ] <pgup>
	[ sv 2/ 'sv ! ; ] <pgdn>
	;

:main
	buildtra
	4
	show clrscr
		drawves
		modogui exec
        botonera
        teclado
		'exit >esc<
		cminiflecha ;

:vmem
	mark
	here dup 'ves ! dup 'ves> ! 0 swap !
	vistall
	;

: $aaaaaa paper
	vmem
	ves "mem/notepad.vsp" load 'ves> !
	main
	ves ves> over - "mem/notepad.vsp" save ;
