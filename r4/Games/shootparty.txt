| shootparty
| PHReda 2010
|--------------------------
^r4/lib/gui.txt
^r4/lib/btn.txt
^r4/lib/sort.txt
^r4/lib/fontj.txt

#nave.spr
 $CFE8FC41 $C2040003 $CD3F2C62 $11305F4 $33D72E82 $40200444 $2E7CFC43 $1113C62 $CFE8FC49
 $22BCD7E7 $D7EF9DB8
#nave.col $A3A3A4C $40E $2F08BE41 $53E8DC33 $33D41333 $2F08BE4A $2BD04027
 $5028F5D8 $7D7D7DC $48E $EE600441 $DFF3B983 $8B5502 $21ABB764 $144C0443 $8BD542
 $EE600449 $13C42457 $F2A42018 $FFFFFFC $ADF5E $F21CF5D1 $F2A497C2 $8859C4 $CD09382
 $E6CF5D4 $F21CF5DA $8F37 $891C58 $828182C $39E $D31CC4A1 $CCB41783 $B1FCDE53
 $D31CC4AA $D5C857A7 $CE4CF5D8 $767677C $3AE 0

#sgolpe #slaser #sstart #stono #stuc 

#xcam 0
#ycam 0
#zcam 30.0
#zrotcam 0

#ratio

#playtime 60

|--------- jugadores (hasta 16 !!)
#colores )( 64

#nroplayersj 0	| jugadores con joystick
#nroplayersk 0	| jugadores con teclado
#nroplayersb 0	| jugadores robot
#nroplayers
#playersv )( 512	| vx vy buttons X
#playersp )( 512	| x y rot daño

:playerxy | nro -- x y
	4 << 'playersp + @+ swap @ swap ;

:playervxy | nro -- vx vy
	4 << 'playersv + @+ swap @ swap ;

:playerxy+! | dy dx nro -- adr
	4 << 'playersp + >r r@ +! r> 4+ +! ;

:playerrot | nro -- rot
	4 << 'playersp + 8 + @ ;

:playerdan | nro -- daño
	4 << 'playersp + 12 + @ ;

:resetplayers
	nroplayersj nroplayersk + nroplayersb + 'nroplayers !
	'playersp >a
	0 ( nroplayers <? )(
		dup 1.0 nroplayers */	| angulo
		dup 1.0 1.0 hsv2rgb pick2 2 << 'colores + !
		dup 2.0 polar swap | ang y x
		a!+ a!+ 0.5 + a!+
		0 a!+
		1+ ) drop ;

|--------- control joy
:updatejoys
	'playersv >a
	nroplayersj ( 1? )( 1-
		dup getjoy 	| cnt adr
		8 +
		@+ $7fff - dup abs $1f <? ( 2drop 0 0 ) drop a!+
		@+ $7fff - dup abs $1f <? ( 2drop 0 0 ) drop a!+
		16 + @ a!+
		4 a+
		) drop ;

#mup #mdn #mle #mri #mb
:updatekey
	[ $7fff 'mup ! ; ] <le> [ 0 'mup ! ; ] >le<
	[ $7fff 'mdn ! ; ] <ri> [ 0 'mdn ! ; ] >ri<
	[ $7fff 'mle ! ; ] <up> [ 0 'mle ! ; ] >up<
	[ $7fff 'mri ! ; ] <dn> [ 0 'mri ! ; ] >dn<
	[ 1 'mb ! ; ] <spc> [ 0 'mb ! ; ] >spc<
    nroplayersj 4 << 'playersv + >a
	mdn mup - a!+
	mri mle - a!+
	mb a!
	;

:updatebot
	nroplayersj nroplayersk + 4 << 'playersv + >a
	nroplayersb ( 1? )( 1-
		rand 8 >> $ffff and $7fff - 3 >> a!+
		rand 8 >> $ffff and $7fff - 3 >> a!+
		rand 15 >> $1 and a!+
		4 a+
		) drop ;

|--------- pos sprites
:updatepos
	'playersp >a
	'playersv
	nroplayers ( 1? )( 1-
		swap @+ dup 2 >> a@ + a!+ | vx
		swap @+ dup 2 >> a@ + a!+ | vx
		rot
		2dup or 0? ( 3drop 4 a+						| 0,0 no actualiza angulo
			)( drop swap atan2 0.5 + a!+ )
		8 + 4 a+
		swap ) 2drop ;

|----
#x2 #x1 #y2 #y1
#xmin #ymin #xmax #ymax

:outfx | adrp1 -- adrp1 0/x
	dup 20 -
	@+ xmin <? ( 2drop 0 ; ) xmax >? ( 2drop 0 ; ) drop
	@  ymin <? ( drop 0 ; ) ymax >? ( drop 0 ; ) drop
	1 ;

:drawplayers
	'colores
	'playersp dup >b
	@+ dup 'x1 ! 'x2 !
	@ dup 'y1 ! 'y2 !
	nroplayers ( 1? )( 1-
		mpush
		b@+ x2 >? ( dup 'x2 ! ) x1 <? ( dup 'x1 ! )
		b@+ y2 >? ( dup 'y2 ! ) y1 <? ( dup 'y1 ! )
		0 mtransi
		b@+ mrotzi
		swap @+
		8 << $c or 'nave.col ! 'nave.spr 3dnsprite
		swap 4 b+
		mpop
		) 2drop
	
|--- ajusta la camara
	x2 x1 - dup 2/ x1 + neg 'xcam !
	y2 y1 - dup 2/ y1 + neg 'ycam !
|	ratio *.
	max dup 2/ + 12.0 max
	'zcam !
|---- ajusta limites
	zcam 2/ dup
	neg dup ratio *. xcam - 'xmin ! ycam - 'ymin !
	dup ratio *. xcam - 'xmax ! ycam - 'ymax !
	;

:movestart
	'playersp >a
	nroplayers ( 1? )( 1-
		a> 8 + @ 0.5 + 0.02 polar
		a> 4+ +!
		a> +!
		16 a+
		) 2drop ;

|--- particulas
| color x y vx vy acc p1 p2
#cntfx 0
#fx 0

:resetfx
	0 'cntfx ! ;

:+fx | p2 p1 acc vy vx y x color --
	cntfx 5 << fx +
	!+ !+ !+ !+ !+ !+ !+ !
	1 'cntfx +!
	;

:-fx | adrp1 0 -- 'adrp1 0
	-1 'cntfx +!
	swap
	32 - | desde el anterior
	dup 8 +
	cntfx 5 << fx +
	8 move |de sr cn
	swap
	;

:drawfx
	fx >b
	0 ( cntfx <? )( 1+
		b@+ ink
		b@+ b@+ 				| x y
		2dup 0 project3d op
		swap b@+ + swap b@+ +	| vx vy
		2dup swap b> 16 - !+ ! | pos=pos+vel
		0 project3d line
		b>
		@+ exec 0? ( -fx ) drop
		8 + >b
		) drop ;

:sdrawfx | -- ; dibuja sin mover
	fx >b
	0 ( cntfx <? )( 1+
		b@+ ink
		b@+ b@+ 				| x y
		2dup 0 project3d op
		swap b@+ + swap b@+ +	| vx vy
		0 project3d line
		12 b+
		) drop ;

:timefx | adrp1 -- adrp1 0/x
	dup @ 0? ( ; )
	1- over !
	1 ;

:r0.1 | -- r
	rand 0.01 mod ;

#xa #ya
:+crash
	20 ( 1? )( 1-
		0
		rand 8 >> $3f and 10 +
		'timefx
		r0.1 r0.1
		ya xa
		rand |$ffffff
		+fx
		) drop
	sgolpe splay
	;

|---------------------
:hitplayer | x y -- x y 0/p
	'playersp >a
	nroplayers ( 1? )( 1-
		a@+ pick3 -
		a@+ pick3 -
		distfast
		0.5 <? ( 2drop a> 8 - ; )
		drop
		8 a+ ) drop
	0 ;

:shootfx | adrp1 -- adrp1 0/x
	dup 20 -
	@+ xmin <? ( 2drop 0 ; ) xmax >? ( 2drop 0 ; )
	swap @ ymin <? ( 2drop 0 ; ) ymax >? ( 2drop 0 ; )
	hitplayer 0? ( 3drop 1 ; ) |  choco
	>r 'ya ! 'xa ! r>
	+crash          | agrega fragmentos
	1 over 12 + +!	| agrega daño
	>a
	dup 12 -		| desplaza por golpe
	@+ a@ + a!+ | x
	@ a> +! |y
	0 ;

|---------------
:crash2 | p1 p2 -- p1 p2
	>r
	dup playerxy r@ playerxy | p1 x1 y1 x2 y2
	rot - >r swap - r>
	distfast
	1.0 >? ( drop r> ; ) drop
	| desplaza por choque
	dup playerxy r@ playerxy | x1 y1 x2 y2
	rot - 2/ >r swap - 2/ r> | dy dx
	over neg over neg pick4
	playerxy+! r@ playerxy+!
	r>
	;

:crashplayers
	0 ( nroplayers 1- <? )(
		dup 1+ ( nroplayers <? )( | a b
				crash2
			1+ ) drop
		1+ ) drop
	;

|---- FIRE
:+fuego | nro b --
	over >r
	0 0
	'shootfx
	r@ playerrot sincos
	-0.3 *. swap -0.3 *. | velocidad
	r@ playerxy swap pick3 2* + swap pick2 2* +
	r> 2 << 'colores + @
	+fx 
	slaser splay ;

:updatefire
	'playersv >a
	0 ( nroplayers <? )(
		8 a+
		a@+ 1 =? ( +fuego ) drop
		4 a+
		1+ ) drop ;

|----------------

:debug
	blanco
	dup "%d " print cntfx "%d " print cr
	'playersp >b
	0 ( nroplayers <? )(
		b@+ " x:%f" print b@+ " y:%f" print b@+ " a:%f" print b@+ " d:%d" print cr
		1+ ) drop 
	xcam ycam zcam "z:%f y:%f x:%f" print cr
	x2 x1 - y2 y1 - "ymax:%f xmax:%f" print

	verde
	xmax ymax 0 project3d xmin ymin 0 project3d caja
	rojo
	x2 y2 0 project3d x1 y1 0 project3d caja

	;

:score
	'colores
	'playersp >b
	0 ( nroplayers <? )( 1+
		swap @+ ink
		swap 12 b+ b@+ over  " %d:%d " print
		) 2drop ;

|-------------tiempo
#timenow
#tic

:score2
	fontj4
	cr blanco
	tic timenow "%d.%d" printc
	fontj2 home
	0 rows nroplayers - 1- gotoxy
	'colores
	'playersp >b
	0 ( nroplayers <? )( 1+
		swap @+ ink
		over " %d:" print
		swap 12 b+ b@+
		( 50 >=? )( 50 - "L" print )
		( 10 >=? )( 10 - "X" print )
		( 5 >=? )( 5 - "V" print )
		( 1? )( 1- "I" print ) drop
		cr
		) 2drop ;

:pausegame
	show30 clrscr
		omode
		xcam ycam zcam mtrans
		drawplayers
		sdrawfx
 		score2
		blink 1? ( blanco )( negro ) drop
		fontj4 home 0 rows 2/ gotoxy
		"* PAUSE *" printc
		'exit >esc<
		;

|--------------- juego
:juegoloop
	playtime 'timenow !
	9 'tic !
	show60 clrscr
|		debug
		updatejoys
		updatekey
		crashplayers
		omode
		xcam ycam zcam mtrans
		drawplayers
		drawfx
		updatepos

 		score2
		'pausegame >esc<
		'exit <f1>
		100 .mseg .restart
		updatefire
		updatebot
		tic 1? ( 1- 'tic ! ; ) drop
		9 'tic !
		timenow 0? ( drop exit ; )
		5 <? ( stono splay )
		1- 'timenow !
    	;

#positions )( 256

:getandsort
	'positions >a
	0 ( nroplayers <? )(
		dup dup playerdan a!+ a!+
		1+ ) drop
	
	nroplayers 1+ 'positions shellsort
	;

:drawlist
	'positions >b
	0 ( nroplayers <? )(
		dup 1+ "    %d - " blanco print
		b@+ b@+  |daño nro
		dup 2 << 'colores + @ ink
		1+ "Player %d : %d" print cr
		1+ ) drop ;

:alineagame
	zrotcam $ffff and
	0.1 <? ( $ffff + ) 'zrotcam !
	fontj4
	show30 clrscr
		omode
		xcam ycam zcam mtrans
		zrotcam 10 <? ( exit )
		0.01 - dup 'zrotcam !
        mrotz
		drawplayers
		blanco
		0 rows 2/ gotoxy
		"READY" printc
		;

:startgame
	3 'tic !
	fontj4
	sstart splay
	show30 clrscr
		omode
		xcam ycam zcam mtrans
		drawplayers
		movestart
		blanco
		0 rows 2/ gotoxy
		tic 1? ( "%d" )( "GO!!" nip ) printc
		1000 .mseg .restart
		tic 0? ( drop exit ; ) 1- 'tic !
		stuc splay
		;

:juego
	alineagame
	startgame
	juegoloop
	getandsort
	0 'zrotcam !
	show clrscr
		0.0001 'zrotcam +!
		omode
		xcam ycam zcam mtrans
		zrotcam mrotz
		drawplayers
		sdrawfx
		home blanco
		fontj4
		cr cr "END GAME" printc cr cr cr
		fontj2
		drawlist
		blink 1? ( blanco )( negro ) drop
		0 rows 2 - gotoxy
	    "- ESC to Continue -" printc
		'exit >esc<
		;

|------------------------------
:resetgame
	resetplayers
	resetfx
	;

:keyplayer nroplayersk 1 xor 'nroplayersk ! resetgame ;
:botplayer nroplayersb 1+ 14 nroplayersj - >? ( 0 nip ) 'nroplayersb ! resetgame ;
:1min	60 'playtime ! ;
:3min   180 'playtime ! ;
:5min   300 'playtime ! ;

|------------------------------
:main
	resetgame

	show clrscr
		0.0005 'zrotcam +!
		omode
		xcam ycam zcam mtrans
		zrotcam mrotz
		drawplayers
		blanco fontj4 home cr cr cr
		"Shoot Party" printc cr cr
		fontj3
		nroplayers
		0? ( drop "No players to play!!" )( "%d Players" )
		printc cr cr
		playtime "%d seconds" printc
		fontj2 home 0 rows 5 - gotoxy violeta
		'1min "1 Min" sp .btnt
		'3min "3 Min" sp .btnt
		'5min "5 Min" sp .btnt
		cr cr
		verde
		[ nroplayers 1? ( juego resetgame ) drop ; ] dup
		<spc> "SPC Play" sp .btnt
		rojo
		'exit dup >esc< "ESC Exit" sp .btnt
		'keyplayer <f1>
		'botplayer <f2>

		fontj home 0 rows 2 - gotoxy verde
		" :R4 games - PHREDA 2010 - http://code.google.com/p/reda4/" printc
		cmano
		;



:inisound
	"golpe.ogg" sload 'sgolpe !
	"laser.ogg" sload 'slaser !
	"start.ogg" sload 'sstart !
	"tono.ogg" sload 'stono !
	"tuc.ogg" sload 'stuc !
	;

:initgame
	mark 0 paper
	here 'fx !
	cntjoy 'nroplayersj !
	0 'nroplayersk !
	0 'nroplayersb !
	sw 1.0 sh */ 'ratio !
	nroplayersj nroplayersk + nroplayersb + 'nroplayers !
	;

: inisound initgame main ;
