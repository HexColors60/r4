| FileBrowser
| PHREDA 2018
|----------------
^r4/lib/gui.txt
^r4/lib/btn.txt
^r4/lib/xfb.txt
^r4/lib/trace.txt

#pathfile )( 1024

#nfiles

#files 0
#files> 0
#files< 0

#filen 0
#filen> 0

#rowdf 20
#coldf 30

#nivel 0
#pagina 0
#actual 0

|------------------- OS DEp ---------------------
:FNAME | adr -- adrname
|WIN|	44 +
|AND|	19 +
	;

:FDIR? | adr -- 1/0
|WIN|	@ $10
|AND|	18 + c@ 4
	=? ( 1 )( 0 ) nip ;

|-------------------------------------------------
#fileext
"txt" "bmr" "inc" "rmt" "spr" "vsp" "ico"
"jpg" "peg" "gif" "bmp" "png"
"avi" "mp4" "mkv" "mov"
"mp3" "wav"
"exe" 0

:searchext | adr -- nro
	>>0 4 - @
	'fileext
	( @+ 1? )(
		pick2
		=? ( drop nip 'fileext - 2 >> ; )
		drop ) 3drop
	$7f ;

:FINFO | adr -- adr info
	dup FDIR? 1? ( 0 nip ; ) drop
	dup FNAME searchext ;

:getname | nro -- ""
	2 << files + @ 16 0>> filen + ;

:getinfo | nro -- info
	2 << files + @ $ff and ;

:getlvl | nro -- info
	2 << files + @ 8 >> $ff and ;

:chginfo | nro --
	2 << files + dup @ $80 xor swap ! ;


|-------------------------------
:files!+
	files> ( files< >? )(
		4 - dup @+ swap !
		) drop
	files< !+ 'files< !
	4 'files> +!
	;

:files.free
	0 files ( files> <? )(
		@+ pick2 >? ( swap rot )
		drop ) drop
	16 >> filen +
	( c@+ 1? )( drop ) drop
	'filen> !
	;

:files.getpath
	'pathfile
	ffirst drop | quita .
	fnext drop
	( fnext 1? )(
		FINFO nivel 8 << or filen> filen - 16 << or
		files!+
		FNAME filen> strcpyl 'filen> !
		) drop
	files> files - 2 >> 'nfiles !
	;


|-----------------------------
:makepath | actual nivel --
	0? ( drop getname "r4/%s" mprint 'pathfile strcpy ; )
	over 1-
	( dup getlvl pick2 >=? )( drop 1- ) drop
	over 1- makepath drop
	"/" 'pathfile strcat
	getname 'pathfile strcat
	;

:expande
	actual
	dup getlvl makepath

   	actual chginfo
	actual getlvl 1+ 'nivel !
    actual 1+ 2 << files + 'files< !
	files.getpath
	;

:remfiles
	actual chginfo
	actual getlvl 1+
	actual 1+
	( dup getlvl pick2 >=? )( drop 1+ ) drop
	nip
	actual 1+
	( swap nfiles <? )(
		dup 2 << files + @
		pick2 2 << files + !
		1+ swap 1+ ) drop
	2 << files + 'files> !
	files> files - 2 >> 'nfiles !
	files.free
	;

:contrae
	'pathfile ( c@+ 1? )( drop ) drop 1-
	( 'pathfile >? )(
		dup c@ $2f =? ( drop 0 swap c! remfiles ; )
		drop 1- ) drop
	remfiles ;

|--------------------------
:remlastpath
	'pathfile ( c@+ 1? )( drop ) drop 1-
	( dup c@ $2f <>? )( drop 1- ) drop
	0 swap c! ;

:actual! | actual --
	dup dup getlvl makepath
	dup getinfo $7f and 1? ( remlastpath ) drop
	'actual !
	;

:loadfile
	actual getinfo 6 >? ( drop ; ) drop
|	source 'name 'path "%s/%s" mprint load 0 swap !
;


|-----------------------------
:boton | nrp 'vector nombre --
	swap flatbtn
	;
:aa	|0 source !
	dup getinfo
	0? ( drop expande ; )
	$80 =? ( drop contrae ; )
	drop
	actual actual!
	loadfile
	;

:clicktree | actual --
	dup actual!
	getinfo
	0? ( drop expande ; )
	$80 =? ( drop contrae ; )
	drop
	loadfile
	;

:enter
	actual getinfo
	0? ( drop expande ; )
	$80 =? ( drop contrae ; )
	drop
	loadfile
	exit
	;

|----------------------
:fdn
	actual
	nfiles 1- >=? ( drop ; )
	1+ pagina rowdf + 1- >=? ( dup rowdf - 1+ 'pagina ! )
	actual!
	loadfile
	;

:fpgdn
	actual rowdf +
	nfiles >=? ( nfiles 1- nip )
	dup pagina rowdf + 1- >=? ( dup rowdf - 1+ 'pagina ! ) drop
	actual!
	loadfile
	;

:fend
	actual
	nfiles 1- >=? ( drop ; )
	nfiles 1- nip
    dup 1+ pagina rowdf + 1- >=? ( dup rowdf - 1+ 'pagina ! ) drop
	actual!
	loadfile
	;

:fup
	actual 0? ( drop ; )
	1- pagina <? ( dup 'pagina ! )
	actual!
	loadfile
	;

:fpgup
	actual 0? ( drop ; )
	rowdf - -? ( drop 0 )
	pagina <? ( dup 'pagina ! )
	actual!
	loadfile
	;

:fhome
	actual 0? ( drop ; )
	0 'pagina !
	0 actual!
	loadfile
	;

:dlgkey
	'fdn <dn> 'fup <up>
	'fpgdn <pgdn> 'fpgup <pgup>
	'fend <end> 'fhome <home>
	'enter <enter>
	;

|----------------------------
:next/ | adr -- adr'
	( c@+ 1? )(
		$2f =? ( drop 0 swap 1- c!+ ; )
		drop ) nip ;

:getactual | adr actual --
	( nfiles <? )(
		dup getname pick2 =s 1? ( drop nip ; )
		drop 1+ ) nip ;

#pathaux )( 1024
:dlgrebuild | str --
	dup
	'pathfile strcpy
	'pathaux strcpy
	0 'actual !

	'pathaux next/ 0? ( drop ; )
	( dup next/ swap | sig act
		actual getactual 'actual !
		expande
		0? ) drop
	actual getactual
	pagina rowdf + 1- >=? ( dup rowdf - 1+ 'pagina ! )
	'actual !
	;

|------------------------------------------
:inka | nro ink -- nro
	over actual <>? ( drop ink ; )
	2drop $444444 ink
	coldf fillcnt
	$ffffff ink ;

:printfile | nro -- nro
	$9FA5B5 inka
	dup getlvl 2* 1+ nsp
	dup getname coldf cntprint
	;

:printfolderc | nro -- nro
	$9FA5B5 inka
	dup getlvl 2* nsp "+ " print
	dup getname print "/" print
|	verde [ dup 'actual ! enter ; ] boton
	;

:printfoldero | nro -- nro
	$E4C189 inka
	dup getlvl 2* nsp "- " print
	dup getname print "/" print
|	cyan [ dup 'actual ! enter ; ] boton
	;

:drawline
	dup getinfo
	0? ( drop printfolderc ; )
	$80 =? ( drop printfoldero ; )
	drop
	printfile ;

:showfiles
	0 ( rowdf <? )(
		dup pagina +
		nfiles >=? ( 2drop ; )
		'clicktree onLineClick
    	drawline cr
		drop 1+ ) drop ;

|----------------------------
:dlgini
	mark
	here
	dup 'files !
	dup 'files> !
	dup 'files< !
	$3fff +
	dup 'filen !
	dup 'filen> !
	$ffff +
	'here !
	;

:dlgend
	empty
	;

::dlgload | 'fn --
	0 'nfiles !
	0 'pagina !
	0 'nivel !
	dlgrebuild
	files.getpath

	oscurecetodo

	0 0 op
	ccw coldf * sh
	over 0 pline pline
	0 sh pline 0 0 pline
	negro poli
    >xfb
	clrscr
	rows 2 - 'rowdf !

	33
	show xfb>scr
		dup "%d)" print cr
		dlgkey
		showfiles
		chome

		[ -1 'actual ! exit ; ] >esc<
		cminiflecha ;

::dlgfileload | 'name -- 0/'name
	iniXFB
	dlgini
	dlgload
	dlgend
	actual -? ( drop 0 ; )
	getname 'pathfile "%s/%s" mprint
	'pathfile strcpy
	'pathfile
	;


|------------------------------------
#name "r4" )( 64

:randxy rand sw mod abs rand sh mod abs ;

:demo
	10 ( 1? )( 1-
		rand ink
		randxy op
		40 ( 1? )( 1- randxy line ) drop
		) drop ;

:main
	33
	show clrscr
		dup "%d" print cr
    	'name print cr
		demo
		[ 'name dlgfileload 0? ( drop ; ) 'name strcpy ; ] <f1>

		'exit >esc<
		cminiflecha ;


: main ;