| Teclado, Memoria, Conversion, Basicos
| PHREDA
| :r4 system library
|-------------------------
^r4/lib/wvkey.txt

#:mshift 0

::toasc | scancode -- ascii
	mshift 1? ( drop $40 and? ( $20 or ) ; ) drop ;

::?ukey $100 or
::?key key =? ( drop exec ; ) 2drop ;
::?kk key $ff and =? ( drop exec ; ) 2drop ;

:hshift
	[ mshift 1 xor 'mshift ! ; ] dup
	VK_SHIFT ?kk VK_CAPITAL ?key ;

::<visible> | vec --
	hshift
	key
	48 <? ( 2drop ; )
	90 >? ( 2drop ; )
	drop exec ;

::<nro> | vec --
	hshift
	key
	48 <? ( 2drop ; )
	57 >? ( 2drop ; )
	drop exec ;

::<dot> | vec --
	key
	VK_OEM_COMMA =? ( VK_OEM_PERIOD nip )
	VK_OEM_PERIOD <>? ( 2drop ; )
	drop exec ;

::<esc> VK_ESCAPE ?key ; ::>esc< VK_ESCAPE ?ukey ;
::<spc> VK_SPACE ?key ;	::>spc< VK_SPACE ?ukey ;
::<back> VK_BACK ?key ;
::<tab> VK_TAB ?key ;
::<enter> VK_RETURN ?key ;	::>enter< VK_RETURN ?ukey ;
::<ctrl> VK_CONTROL ?key ;	::>ctrl< VK_CONTROL ?ukey ;
::<alt> VK_MENU ?key ;		::>alt< VK_MENU ?ukey ;

::<home> VK_HOME ?key ;	::<end> VK_END ?key ;
::>home< VK_HOME ?ukey ; ::>end< VK_END ?ukey ;

::<up> VK_UP ?key ;	::<dn> VK_DOWN ?key ;
::<ri> VK_RIGHT ?key ;	::<le> VK_LEFT ?key ;
::>up< VK_UP ?ukey ;	::>dn< VK_DOWN ?ukey ;
::>ri< VK_RIGHT ?ukey ;	::>le< VK_LEFT ?ukey ;

::<ins> VK_INSERT ?key ;	::<del> VK_DELETE ?key ;
::<pgup> VK_PRIOR ?key ; ::<pgdn> VK_NEXT ?key ;
::>ins< VK_INSERT ?ukey ;	::>del< VK_DELETE ?ukey ;
::>pgup< VK_PRIOR ?key ; ::>pgdn< VK_NEXT ?key ;

::<f1> VK_F1 ?key ;	::<f2> VK_F2 ?key ;
::<f3> VK_F3 ?key ; ::<f4> VK_F4 ?key ;
::<f5> VK_F5 ?key ; ::<f6> VK_F6 ?key ;
::<f7> VK_F7 ?key ; ::<f8> VK_F8 ?key ;
::<f9> VK_F9 ?key ; ::<f10> VK_F10 ?key ;
::<f11> VK_F11 ?key ; ::<f12> VK_F12 ?key ;

::keypad | el pad es para cursor
	key
	96 <? ( drop ; ) 105 >? ( drop ; )
	48 - key! ;
