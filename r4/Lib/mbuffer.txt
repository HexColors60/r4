| mask buffer - stencil
| PHREDA 2015
|-------------------------
^r4/lib/gui.txt

|--- maskbuffer | 1024*sh
#maskb

:mask.adr | x y -- m d
	1 pick2 $1f and << rot 5 >> 2 << rot 7 << + maskb + ;

::maskb.get | x y -- b
	mask.adr @ and ;

::maskb.set | x y --
	mask.adr dup @ rot not and swap ! ;

:gmask1
	$1f and -2 swap << not ;

:gmask2
	$1f and -1 swap << ;

:filline | x1 y1 x2 y2 a --
	2 << pick3 7 << + maskb + >a
	rot - | x1 x2 cnt
	rot gmask2 rot gmask1 and not
	swap 1+
	( 1? )( 1-
		a@ pick2 and a!
		512 a+
		) 2drop
	;

::maskb.rset | x1 y1 x2 y2 --
	pick3 5 >>
	pick2 5 >> =? ( filline ; )
	2 << pick3 7 << + maskb + >a
	rot - 							| x1 x2 cnty
	over 5 >> pick3 5 >> - 1- swap	| x1 x2 cntx cnty
	2swap gmask1 not swap gmask2 not
	2swap 1+						| maska maskb cntx cnty
	( 1? )( 1- a@
		pick3 and a> !+ 				| maska maskb cntx cnty adr
		pick2 ( 1? )( 1- 0 rot !+ swap ) drop
		pick4 over @ and swap !
		512 a+
		) 4drop
	;


:rgetline | x1 y1 x2 y2 a -- b
	2 << pick3 7 << + maskb + >a
	rot - | x1 x2 cnt
	rot gmask2 rot gmask1 and
	swap 1+	| mask cnt
	( 1? )( 1-
		a@ pick2 and? ( 3drop 1 ; ) drop
		512 a+
		) 2drop
	0 ;

::maskb.rget | x1 y1 x2 y2 -- b
	pick3 5 >>
	pick2 5 >> =? ( rgetline ; )
	2 << pick3 7 << + maskb + >a
	rot - 							| x1 x2 cnty
	over 5 >> pick3 5 >> - 1- swap	| x1 x2 cntx cnty
	2swap gmask1 swap gmask2
	2swap 1+						| maska maskb cntx cnty
	( 1? )( 1- a> @+
		pick4 and? ( 4drop 2drop 1 ; ) drop	| maska maskb cntx cnty adr
		pick2 ( 1? )( 1- swap
			@+ -1 <>? ( 4drop 3drop 1 ; ) drop
			swap ) drop
		@ pick4 and? ( 4drop drop 1 ; ) drop
		512 a+
		) 4drop
	0 ;

::maskb.clear
	-1 maskb sh 3 << FILL ;

::maskb.ini
	here dup 'maskb !
	sh 7 << + 'here ! ;


|------------------------------------
::maskpxy | color x y --
|	-? ( 3drop ; ) sh >=? ( 3drop ; )	| CLIP
	2dup mask.adr swap over @
	nand? ( nip 4drop ; )
	not over @ and swap !
	setxy a!+ ;

:proc8 | mask -- mask
	$ff nand? ( 8 a+ ; )	| todos 0
	$01 and? ( ink@ a!+ )( 4 a+ )
	$02 and? ( ink@ a!+ )( 4 a+ )
	$04 and? ( ink@ a!+ )( 4 a+ )
	$08 and? ( ink@ a!+ )( 4 a+ )
	$10 and? ( ink@ a!+ )( 4 a+ )
	$20 and? ( ink@ a!+ )( 4 a+ )
	$40 and? ( ink@ a!+ )( 4 a+ )
	$80 and? ( ink@ a!+ )( 4 a+ )
	;

:oneword | nro --
	0? ( 512 a+ drop ; )
	-1 =? ( 32 ( 1? )( ink@ a!+ 1- ) 2drop ; )
	proc8 8 >> proc8 8 >> proc8 8 >> proc8 drop ;

:maskfpxl | x1 y x2 --
	pick2 $ffffffe0 and pick2 setxy 		| x y x2
	pick2 5 >> 2 << rot 7 << + maskb + >a	| x x2
	gmask1 swap gmask2 and
	a@ 2dup and oneword swap not and a! ;

::maskfpx | x y x --
	dup 5 >> pick3 5 >> -
	0? ( drop maskfpxl ; ) 1- >r				| x1 y x2 r:cntx
	pick2 $ffffffe0 and pick2 setxy 		| x y x2   r:cntx
	pick2 5 >> 2 << rot 7 << + maskb + 		| x1 x2 adr
	r> swap >b                              | x1 x2 cntx
	rot gmask2 b@ 2dup and oneword swap not and b!+			| x2 cntx
	( 1? )( b@ oneword 0 b!+ 1- ) drop
	gmask1 b@ 2dup and oneword swap not and b!
	;


::maskfpy | x y1 y2 --
	pick2 pick2 setxy 		| x y1 y2
	pick2 5 >> 2 << pick2 7 << + maskb + >b	| x y1 y2
	swap - 1 rot $1f and << | cnty mask
	swap 1+
	( 1? )( 1- | mask cnty
		b@ pick2 and? ( ink@ a!+ )( 4 a+ )
		pick2 not and b!
		sw 1- 2 << a+ 512 b+
		) 2drop ;


:maskfpxyl | x1 y1 x2 y2 --
	pick3 $ffffffe0 and pick3 setxy
	pick3 5 >> 2 << pick3 7 << + maskb + >b
	rot - 						| x1 x2 cnty
	rot gmask2 rot gmask1 and	| cntx mask
	swap 1+ ( 1? )(
		b@ pick2 over and oneword pick2 not and b!
		sw 32 - 2 << a+
		512 b+
		1- ) 2drop ;

::maskfpxy | x1 y1 x2 y2 --
	over 5 >> pick4 5 >> -
	0? ( drop maskfpxyl ; ) 1- >r	| x1 y1 x2 y2 r:cntx
	pick3 $ffffffe0 and pick3 setxy
	pick3 5 >> 2 << pick3 7 << + maskb +
	r> swap >r >r					| x1 y1 x2 y2   r:cntx adr
	rot -							| x1 x2 cnty
	rot gmask2 rot gmask1 			| cnty m1 m2
	swap rot
	r> r> >b swap	1+			| m2 m1 cntx cnty
	( 1? )(
		pick2 b@ 2dup and oneword swap not and b!+			| x2 cntx
		over ( 1? )( b@ oneword 0 b!+ 1- ) drop
		pick3 b@ 2dup and oneword swap not and b!+			| x2 cntx
		32 pick2 2 + - 2 << b+
		sw pick2 2 + 5 << - 2 << a+
		1- ) 4drop ;


|-------------test mask
:maskb.draw
	maskb >b
	0 0 setxy
	sh ( 1? )( 1-
		32 ( 1? )( 1-
			b@+ 32 ( 1? )( 1- swap
				1 and? ( $ffffff )( 0 ) a!+
				2/
				swap ) 2drop
			) drop
		) drop
	;

:dbox | x1 y1 x2 y2 --
	2over op
	pick3 over line
	2dup line
	over pick3 line
	2drop line ;

:livetest
	40 40 over 48 + over 48 +
	maskb.rget 1? ( rojo )( verde ) drop
	40 40 over 48 + over 48 + dbox
	100 40 maskb.get 1? ( rojo )( verde ) drop
	100 40 2dup op line
	;

:boxytest | x y color --
	ink
	xymouse
	2swap pick2 +
	swap pick3 + swap
	2over 2over dbox maskb.rset ;

#test $f0f0f0a1
:main
	maskb.ini
	maskb.clear
	cls
	33
	show clrscr
		dup "%d " print cr

		livetest

		rand xymouse maskpxy

		[ rojo 20 ( 40 <? )( 34 over 74 maskfpx 1+ ) drop ; ] <f1>
		[ verde 30 ( 50 <? )( 40 over 184 maskfpx 1+ ) drop ; ] <f2>
		[ amarillo 50 ( 90 <? )( dup 10 200 maskfpy 1+ ) drop ; ] <f3>
		[ azul 35 34 56 48 maskfpxy ; ] <f4>
		[ violeta 40 40 190 120 maskfpxy ; ] <f5>
		'exit >esc<
		;

: mark main ;


