| zbuffer - convex polyfill
| PHREDA 2016
|-------------------------
#:zb
#zbw #zbh
#zcnt #:zbo

#segs	| mem polys
#px #py #pz
#ymin #ymax
#zs #z #oz
#o

|--- maskbuffer | zbw*zbh
:zb.adr | x y -- d
	zbw * + 2 << zb + ;

::zb@ | x y -- b
	zb.adr @ ;

::zbo! | o z x y --
	zb.adr >r r!+ r> zbo + ! ;

::zb! | x y z --
	rot rot zb.adr >r r!+ o r> zbo + ! ;

::zbw! | x y z w --
	swap 'z !
	rot rot zb.adr >r | w
	( 1? )(
		r@+
		z >? ( z r 4 - ! o r zbo + ! )
		drop 1- ) drop
	rdrop ;

::zbh! | x y z h --
	swap 'z !
	rot rot zb.adr >r
	zbw 1- 2 << swap
	( 1? )(
		r@+
		z >? ( z r 4 - ! o r zbo + ! )
		drop
		over r+ 1- ) 2drop
	rdrop ;

::zb.clear
	zb >r zcnt ( 1? )( 1- $7fffffff r!+ ) drop rdrop ;

::zb.ini | w h --
	2dup * dup 'zcnt ! dup 2 << 4 - 'zbo !
	here dup 'zb ! 		| zbuffer,cbuffer
	swap 3 << + dup 'segs !
	over 4 << + 'here !
	dup 1- 'ymax ! 'zbh ! 'zbw !
	zb.clear
	;

::zb.occ | w h x y z -- 1/0
	'z !
	zb.adr >r
	zbw pick2 -
	swap ( 1? )(
		pick2 ( 1? )( r@+
			z >? ( 4drop rdrop 1 ; )
			drop 1- ) drop
		over r+
		1- ) 3drop
	rdrop 0 ;

::zb.set | w h x y z o --
	'o ! 'z !
	zb.adr >r
	zbw pick2 -
	swap ( 1? )(
		pick2 ( 1? )( r@+
			z <? ( z r 4 - ! o r zbo + ! )
			drop 1- ) drop
		over r+
		1- ) 3drop
	rdrop ;

|--- convex polygon
#FBASE	16

::zop | x y z --
	'pz !
	ymin 4 << segs + >r
	ymax ymin - 1+ ( 1? )( 1- $7fffffff r!+ -1 r!+ 8 r+ ) drop rdrop
	dup 'ymin ! dup 'ymax !

	over FBASE << dup pick2 4 << segs + >r r!+ r!+
	'py ! 'px !
	pz dup r!+ r> !
	;

::zop2 | x y z --
	'pz !
	ymin <? ( dup 'ymin ! )
 	ymax >? ( dup 'ymax ! )
	2dup 4 << segs + >r
	FBASE <<
	r@+ <? ( dup r 4 - ! pz r 4+ ! )
	r@+ >? ( dup r 4 - ! pz r 4+ ! )
	drop rdrop
	'py ! 'px !
	;

:enlinea | x y --
	4 << segs + >r
	dup FBASE <<
	r@+ <? ( dup r 4 - ! oz r 4+ ! )
	r@+ >? ( dup r 4 - ! oz r 4+ ! )
	drop rdrop
	'px ! oz 'pz ! ;

::zline | x y z --
	'oz !
	py =? ( enlinea ; )
	px py pick2 >? ( 2swap 2dup pz oz dup 'pz ! - )( 2over oz pz over 'pz ! dup 'oz ! - ) | x2 y2 x1 y1
	'zs ! 'py ! 'px !
	ymin <? ( dup 'ymin ! )
 	rot ymax >? ( dup 'ymax ! )		| comprueba el mayor
	>r >r FBASE << swap FBASE << 	| x1 x2
	over - r> r> over -				| x1 (x2-x1) y1 (y2-y1)
	1+ rot over / 					| x1 y1 (y2-y1) t
	rot 4 << segs + >r				| x1 (y2-y1) t
	zs pick2 1- 16 <</ 'zs ! 0 'z !
	rot over 2/ + rot				| t x1 cnt
	( 1? )( 1- swap
		r@+ <? ( dup r 4 - ! oz z 16 >> + r 4+ ! )
		r@+ >? ( dup r 4 - ! oz z 16 >> + r 4+ ! )
		8 r+
		zs 'z +!
		pick2 + swap )
	3drop rdrop ;


:zb.line | cnt x y zi zf --
	over - pick4 16 <</ 'zs ! 'pz !
	zb.adr >r
	0 swap | z cnt
	( 1? )( pz pick2 16 >> +
		r@+ <? ( r 4 - ! o r zbo + ! )( drop )
		swap zs + swap
		1- ) 2drop
	rdrop ;

::zo! 'o ! ;

::zpoly | --
	ymax
	ymin dup 4 << segs + >r
	( over <=? )(
		r@+ FBASE >> r@+ FBASE >>
		over - 1+ swap pick2
		r@+ r@+
		zb.line
		1+ ) 2drop rdrop ;

|--------------
:ztest
	0 0 setxy
	zb >r
	sh ( 1? )( 1-
		sw ( 1? )( 1-
			r@+ $7fffffff <>? ( r zbo + @ )( 0 ) px!+ drop
			) drop
		) drop rdrop ;
|-------------