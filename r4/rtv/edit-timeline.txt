| edit timeline
| 2017 PHREDA
|-----------------------------------------
^r4/lib/gui.txt
^r4/lib/part16.txt

^r4/lib/btn.txt

^r4/lib/input.txt
^r4/lib/win.txt
^r4/lib/dlgfile.txt
^r4/lib/dlgcol.txt
^r4/lib/vesprite.txt

^r4/lib/boxprint.txt

^r4/rtv/testskin.vsp
^r4/rtv/fx1.vsp

^r4/lib/trace.txt

#bon1
#bon2

#xcam 0 #ycam 0 #zcam 50.0
#xr 0 #yr 0

#time>
#ltime 0


#fx 0 0		| fx
#objs 0 0	| objetos
#tims 0 0	| tiempo
#timeline 0 0

#strmem )( $ffff
#strmem> 'strmem

|---------- str mem
:strini
	'strmem 'strmem> ! ;

:,str | "" -- adr
	strmem> dup >r
	( swap c@+ 1? )( rot c!+ )
	rot c!+ 'strmem> !
	drop
	r> 'strmem - ;

:str. | adr -- radd
	'strmem + ;

|---------- animadores
#deltat
#prevt

:time.ini
	msec 'prevt ! 0 'deltat ! ;

:time.next
	msec dup prevt - 'deltat ! 'prevt ! ;

|---- Penner animation moves
:Quad_In	dup *. ;
:Quad_Out	2.0 over - *. ;
:Quad_InOut	2* 1.0 <? ( Quad_In 2/ ; ) 1.0 - Quad_Out 2/ 0.5 + ;

:Cub_In		dup dup *. *. ;
:Cub_Out	1.0 - Cub_In 1.0 + ;
:Cub_InOut	2* 1.0 <? ( Cub_In 2/ ; ) 2.0 - Cub_In 2.0 + 2/ ;

:Quar_In	dup *. dup *. ;
:Quar_Out	1.0 - Quar_In -1.0 + neg ;
:Quar_InOut	2* 1.0 <? ( Quar_In 2/ ; ) 1.0 - Quar_Out 1.0 + 2/ ;

:Quin_In	dup dup *. dup *. *. ;
:Quin_Out	1.0 - Quin_In 1.0 + ;
:Quin_InOut	2* 1.0 <? ( Quin_In 2/ ; ) 1.0 - Quin_Out 2/ 0.5 + ;

:Sin_In		1.0 swap 2 >> cos - ;
:Sin_Out	2 >> sin ;
:Sin_InOut	1.0 swap 2/ cos - 2/ ;

:Exp_In		0? ( ; ) 1.0 - 1024.0 swap pow. ;
:Exp_Out    1.0 =? ( ; ) -10 * 2.0 swap pow. 1.0 swap - ;
:Exp_InOut  2* 1.0 <? ( Exp_In 2/ ; ) 1.0 - Exp_Out 2/ 0.5 + ;

:Cir_In		dup *. 1.0 swap - sqrt. 1.0 swap - ;	|18
:Cir_Out	1.0 - dup *. 1.0 swap - sqrt. ;
:Cir_InOut	2* 1.0 <? ( Cir_In 2/ ; ) 1.0 - Cir_Out 2/ 0.5 + ;

:Ela_In
	0? ( ; ) 1.0 =? ( ; )
    dup 1.0 - 10 * 2.0 swap pow. neg
	swap 1.1 - 2.5 *. sin *. ;
:Ela_Out
	0? ( ; ) 1.0 =? ( ; )
	dup -10 * 2.0 swap pow.
	swap 0.1 - 2.5 *. sin *. 1.0 + ;
:Ela_InOut	2* 1.0 <? ( Ela_In 2/ ; ) 1.0 - Ela_Out 2/ 0.5 + ;

:Bac_In		dup 2.7016 *. 1.7016 - swap dup *. *. ;
:Bac_Out	1.0 - dup 2.7016 *. 1.7016 + swap dup *. *. 1.0 + ;
:Bac_InOut	2* 1.0 <? ( Bac_In 2/ ; ) 1.0 - Bac_Out 2/ 0.5 + ;

:Bou_Out
	0.3636 <? ( dup *. 7.5625 *. ; )
	0.7273 <? ( 0.5454 - dup *. 7.5625 *. 0.75 + ; )
	0.9091 <? ( 0.8182 - dup *. 7.5625 *. 0.9375 + ; )
	0.9545 - dup *. 7.5625 *. 0.9844 + ;
:Bou_In		1.0 swap - Bou_Out 1.0 swap - ;
:Bou_InOut	2* 1.0 <? ( Bou_In 2/ ; ) 1.0 - Bou_Out 2/ 0.5 + ;

#ease 0
Quad_In	Quad_Out Quad_InOut
Cub_In Cub_Out Cub_InOut
Quar_In Quar_Out Quar_InOut
Quin_In	Quin_Out Quin_InOut
Sin_In Sin_Out Sin_InOut
Exp_In Exp_Out Exp_InOut
Cir_In Cir_Out Cir_InOut
Ela_In Ela_Out Ela_InOut
Bac_In Bac_Out Bac_InOut
Bou_In Bou_Out Bou_InOut
0

#cadapos

:generatebox
	dup 4+ >r
	mpush
	r@+ r@+ r@+ mtransi
	r@+ 1? ( mrotxi )( drop )
	r@+ 1? ( mrotyi )( drop )
	r@+ 1? ( mrotzi )( drop )
	r@+ 1? ( dup dup mscalei )( drop )
	rdrop

    cadapos >r
	-1.0 -1.0 0	project3d xy>d r!+
	-1.0 1.0 0	project3d xy>d r!+
	1.0 1.0 0 project3d xy>d r!+
	1.0 -1.0 0	project3d xy>d r!+
	r> 'cadapos !

	mpop ;

:generatepick
	omode
	xcam ycam zcam mtrans
	here 'cadapos !
	'generatebox 'objs p.mapv
	;

|------------ point in cuad
#xt #yt
#inside

|...x2-x1 * y-y1 - y2-y1 * x-x1
:cross | x1 y1 x2 y2 -- x2 y2 cr
	2swap 						| x2 y2 x1 y1
	pick3 pick2 - yt pick2 - *	| x2 y2 x1 y1 A
	pick3 rot - rot neg xt + * - ;

:top | x y -- x y x y
	0 'inside ! 2dup ;

:tline | x y x y -- x y 1..fail
	cross 0? ( ; )
	inside 0? ( swap 'inside ! ; )
	xor $80000000 and ;

:tinside | x y x y -- 1..fail
	2swap cross nip nip 0? ( ; )
	inside xor $80000000 and ;


:searchin | adr -- 1
	>r
	r@+ d>xy top
	r@+ d>xy tline drop
	r@+ d>xy tline 1? ( rdrop nip nip nip nip ; ) drop
	r> @ d>xy tline 1? ( nip nip nip nip ; ) drop
	tinside
	;

:pickobj
	xymouse 'yt ! 'xt !
	here >r
	'objs p.cnt ( 1? )(
		r searchin 0? ( drop rdrop 'objs p.cnt swap - ; )
		drop 16 r+ 1- ) drop rdrop -1 ;

:drawpick
	verde
	here >r
	'objs p.cnt ( 1? )( 1-
		r@+ d>xy 2dup op
		r@+	d>xy line
		r@+	d>xy line
		r@+	d>xy line line
		) drop rdrop ;



|--- bones
:loadbon | filename -- mem
	here dup rot
	load 0 swap !+ 'here !
	|... fix
	dup
	( @+ 1? )( drop
		'vsbone over 8 + ! | adr of vesprite is incorrect!
		12 + ) 2drop
	|...
	;

:bbone | largo lev ves tipo -- largo xx
	0? ( 2drop ; ) drop	| sin dibujo
	mpush
	1.0 pick3 7 >> 1.0 mscalei
	3dvesprite
	mpop
  	;

:drawbbones | adr --
	>r
	0 ( r@+ 1? )( dup $ff and	| nivel largo nnivel
		rot over - 1+ clamp0 | anterior-actual+1
		nmpop
		mpush
		r@+ mrotzi
		r@+ r@+ swap bbone
		swap 8 >> 0 swap 0 mtransi
		) drop
	rdrop
	nmpop
	;

|---Objs
| sprite
| text
| bones-skin
| bitmap
| fx

:tl.reset
	;

:tl.draw
	;

|--------------------------
| x y z rx ry rz scale dibujo
:drawsprite | adr -- adr
	>r
	mpush
	r@+ r@+ r@+ mtransi
	r@+ 1? ( mrotxi )( drop )
	r@+ 1? ( mrotyi )( drop )
	r@+ 1? ( mrotzi )( drop )
	r@+ 1? ( dup dup mscalei )( drop )
	r> @ 3dvesprite
	mpop ;

:objs! | spr sca rz ry rx z y x --
	'drawsprite 'objs p!+ >r
	r!+ r!+ r!+
	r!+ r!+ r!+
	r!+ r> ! ;

|----------------------------
:drawtext | adr -- adr
	>r
	mpush
	r@+ r@+ r@+ mtransi
	r@+ 1? ( mrotxi )( drop )
	r@+ 1? ( mrotyi )( drop )
	r@+ 1? ( mrotzi )( drop )
	r@+ 1? ( dup dup mscalei )( drop )
	r@+ dup 24 >> $f and swap $ffffff and
	setfont3d
	r@+ dup $ffffff and ink
	r> @ str.
	boxplacec
	swap 24 >> $ff and boxprint
	mpop ;

:text! | str tt tt sca rz ry rx z y x --
	'drawtext 'objs p!+ >r
	r!+ r!+ r!+
	r!+ r!+ r!+
	r!+
	r!+ r!+
	,str r> ! ;

|----------------------------
:objs.clear
	'objs p.clear
	'tims p.clear
	'fx p.clear
	;

:addspr

	;

| objeto texto
:addtex
	;

:addfig
	;


:drawtimelayer
	;

:drawtimeline
	verde
|	tx1 ty1 tx2 ty1 16 + caja
	;


|---------------------------
:randrotz	rand 0 0 ;
:randrot	rand rand rand ;
:randxyz
	0.0
|	rand 25.0 mod
|	rand 25.0 mod
	xymouse zcam invproject3d
	swap
	;

|---------------------------
:rand+obj
	'svg6
	rand 0.5 mod 1.8 +

	randrotz
	randxyz
	objs!
	generatepick
	;

:rand+txt
	"Hola_a_todos"	| texto
	$12 24 <<		| align
	rand $ffffff and or	 | color
	$7 24 <<			| font
	rand 1.0 mod 3.0 + $ffffff and
	or	| size

	0.0 | scale
	randrotz
	randxyz
	text!
	generatepick
	;

|---------------------------
#cursorobj -1

:dnobj
	pickobj 'cursorobj !
	;

:moveobj
	cursorobj -? ( drop ; )
	6 << 'objs 4+ @ + >r
	xymouse zcam invproject3d
	swap
	4 r+ r !
	4 r+ r !
	rdrop
	generatepick
	;

:drawcursor
	'dnobj 'moveobj [ ; ] guiMap
	cursorobj -? ( drop ; )
	verde
	4 << here + >r
	r@+ d>xy
	2dup 4 box
	2dup op
	r@+	d>xy line
	r@+	d>xy line
	r@+	d>xy line line
	rdrop ;

:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx
	mroty ;


:3dscreen
	time.next
	'tims p.draw

	omode
|	freelook
	xcam ycam zcam mtrans

	drawcursor

	'objs p.draw
	;
:a
    -12.0 0 0 mtransi
	bon1 drawbbones

    24.0 0 0 mtransi
	bon2 drawbbones
	;


:afirs
	0 'time> ! ;
:aprev
	time> 1- 0 max 'time> ! ;
:anext
	time> 1+ ltime >? ( dup 'ltime ! ) 'time> ! ;
:alast
	ltime 'time> ! ;

:aplay
	time.ini
	show60 clrscr
		time.next
		'tims p.draw

		omode
	|	freelook
		xcam ycam zcam mtrans
		'objs p.draw

		'exit >esc<
	;

#icopl $0e10
%0000000000000000
%0000000000000000
%0000000000011000
%0000000001111000
%0000000111111000
%0000011111111000
%0001111111111000
%0001111111111000
%0000011111111000
%0000000111111000
%0000000001111000
%0000000000011000
%0000000000000000
%0000000000000000

#icone $0e10
%0000000000000000
%0000000000000000
%0000001100001100
%0000011100011100
%0000111100111100
%0001111101111100
%0011111111111100
%0011111111111100
%0001111101111100
%0000111100111100
%0000011100011100
%0000001100001100
%0000000000000000
%0000000000000000

#icola $0e10
%0000000000000000
%0000000000000000
%0011000000001100
%0011000000111100
%0011000011111100
%0011001111111100
%0011111111111100
%0011111111111100
%0011001111111100
%0011000011111100
%0011000000111100
%0011000000001100
%0000000000000000
%0000000000000000

#icopr $0e10
%0000000000000000
%0000000000000000
%0011000011000000
%0011100011100000
%0011110011110000
%0011111011111000
%0011111111111100
%0011111111111100
%0011111011111000
%0011110011110000
%0011100011100000
%0011000011000000
%0000000000000000
%0000000000000000

#icofi $0e10
%0000000000000000
%0000000000000000
%0011000000001100
%0011110000001100
%0011111100001100
%0011111111001100
%0011111111111100
%0011111111111100
%0011111111001100
%0011111100001100
%0011110000001100
%0011000000001100
%0000000000000000
%0000000000000000

:dlgPlay
	sp
	cyan
	'afirs 'icofi ilink
	'aprev 'icopr ilink
	verde
	ltime time> " %d/%d " print
	'aplay 'icopl ilink
	cyan
	'anext 'icone ilink
	'alast 'icola ilink
	;

#winPlay 0 0 16 180 50 "PlayTool"


|#modx

:objwin
	cursorobj -? ( drop ; )
	verde
	6 << 'objs 4+ @ +
	4+ >r
|	"x:" print 'modx 8 4 inputreal cr
	r@+ "x:%f " print

	r@+ "y:%f " print
	r@+ "z:%f " print cr
	r@+ "rx:%f " print
	r@+ "ry:%f " print
	r@+ "rz:%f " print cr
	r@+ "s:%f " print cr
	rdrop ;

:main
	4
	show fonti clrscr
		3dscreen

		home
		gris 1 linesfill
		blanco dup ":r%d EditTimeline " print
		verde
		"F2+Spr" print sp
		"F3+Tex" print sp
		"F4+Fig" print sp
		azul 'dlgplay 'winplay guiWin | play

		cr
		here "%h " print cr
		objwin


|       'addspr <f2>
        'rand+obj <f2>
|        'addtex <f3>
        'rand+txt <f3>
|        'addfig <f4>

|        sh 200 - 'ty1 !
|		drawtimeline

		'exit >esc<
		cminiflecha ;

:ini
	rerand
	mark

	1024 'objs p.ini
	1024 'tims p.ini
	1024 'fx p.ini
	1024 'timeline p.ini

	"media/bon/test1.bon" loadbon 'bon1 !
	"media/bon/person.bon" loadbon 'bon2 !
	;

: ini main ;