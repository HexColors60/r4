| escena
| PHREDA 2017
|------------------
^r4/lib/gui.txt
^r4/lib/part8.txt
^r4/lib/vesprite.txt

^r4/rtv/fx1.vsp

#fx 0 0		| fx
#objs 0 0	| objetos
#tims 0 0	| tiempo

#xcam #ycam #zcam 3.0

| x y z rx ry rz scale dibujo
:drawsprite
	dup >r
	mpush
	r@+ r@+ r@+ mtransi
	r@+ 1? ( mrotxi )( drop )
	r@+ 1? ( mrotyi )( drop )
	r@+ 1? ( mrotzi )( drop )
	r@+ 1? ( dup dup mscalei )( drop )
	r> @ 3dvesprite
	mpop ;

:sprite.move2d | x y spr --
	>r swap r!+ r> ! ;

:sprite.move | x y z spr --
	>r rot r!+ swap r!+ r> ! ;

:objs! | spr sca rz ry rx z y x --
	'objs p! >r
	r!+ r!+ r!+
	r!+ r!+ r!+
	r!+ r> ! ;

:objs.clear
	'objs p.clear
	'tims p.clear
	'fx p.clear
	;

:emem
	mark
	1024 'objs p.ini
	1024 'tims p.ini
	1024 'fx p.ini
	;

|---------- animadores
#deltat
#prevt

| timeline
|  duracion|eff pos.final
| FFFF 0F
#xani
#yani
#sani
#rani

:time.ini
	msec 'prevt ! 0 'deltat ! ;

:time.next
	msec dup prevt - 'deltat ! 'prevt ! ;

|---- Penner animation moves
:Quad_In	dup *. ;
:Quad_Out	2.0 over - *. ;
:Quad_InOut	2* 1.0 <? ( Quad_In 2/ ; ) 1.0 - Quad_Out 2/ 0.5 + ;

:Cub_In		dup dup *. *. ;
:Cub_Out	1.0 - Cub_In 1.0 + ;
:Cub_InOut	2* 1.0 <? ( Cub_In 2/ ; ) 2.0 - Cub_In 2.0 + 2/ ;

:Quar_In	dup *. dup *. ;
:Quar_Out	1.0 - Quar_In -1.0 + neg ;
:Quar_InOut	2* 1.0 <? ( Quar_In 2/ ; ) 1.0 - Quar_Out 1.0 + 2/ ;

:Quin_In	dup dup *. dup *. *. ;
:Quin_Out	1.0 - Quin_In 1.0 + ;
:Quin_InOut	2* 1.0 <? ( Quin_In 2/ ; ) 1.0 - Quin_Out 2/ 0.5 + ;

:Sin_In		1.0 swap 2 >> cos - ;
:Sin_Out	2 >> sin ;
:Sin_InOut	1.0 swap 2/ cos - 2/ ;

:Exp_In		0? ( ; ) 1.0 - 1024.0 swap pow. ;
:Exp_Out    1.0 =? ( ; ) -10 * 2.0 swap pow. 1.0 swap - ;
:Exp_InOut  2* 1.0 <? ( Exp_In 2/ ; ) 1.0 - Exp_Out 2/ 0.5 + ;

:Cir_In		dup *. 1.0 swap - sqrt. 1.0 swap - ;	|18
:Cir_Out	1.0 - dup *. 1.0 swap - sqrt. ;
:Cir_InOut	2* 1.0 <? ( Cir_In 2/ ; ) 1.0 - Cir_Out 2/ 0.5 + ;

:Ela_In
	0? ( ; ) 1.0 =? ( ; )
    dup 1.0 - 10 * 2.0 swap pow. neg
	swap 1.1 - 2.5 *. sin *. ;
:Ela_Out
	0? ( ; ) 1.0 =? ( ; )
	dup -10 * 2.0 swap pow.
	swap 0.1 - 2.5 *. sin *. 1.0 + ;
:Ela_InOut	2* 1.0 <? ( Ela_In 2/ ; ) 1.0 - Ela_Out 2/ 0.5 + ;

:Bac_In		dup 2.7016 *. 1.7016 - swap dup *. *. ;
:Bac_Out	1.0 - dup 2.7016 *. 1.7016 + swap dup *. *. 1.0 + ;
:Bac_InOut	2* 1.0 <? ( Bac_In 2/ ; ) 1.0 - Bac_Out 2/ 0.5 + ;

:Bou_Out
	0.3636 <? ( dup *. 7.5625 *. ; )
	0.7273 <? ( 0.5454 - dup *. 7.5625 *. 0.75 + ; )
	0.9091 <? ( 0.8182 - dup *. 7.5625 *. 0.9375 + ; )
	0.9545 - dup *. 7.5625 *. 0.9844 + ;
:Bou_In		1.0 swap - Bou_Out 1.0 swap - ;
:Bou_InOut	2* 1.0 <? ( Bou_In 2/ ; ) 1.0 - Bou_Out 2/ 0.5 + ;

#ease 0
Quad_In	Quad_Out Quad_InOut
Cub_In Cub_Out Cub_InOut
Quar_In Quar_Out Quar_InOut
Quin_In	Quin_Out Quin_InOut
Sin_In Sin_Out Sin_InOut
Exp_In Exp_Out Exp_InOut
Cir_In Cir_Out Cir_InOut
Ela_In Ela_Out Ela_InOut
Bac_In Bac_Out Bac_InOut
Bou_In Bou_Out Bou_InOut
0

|---- tiempo
:tiempo
	>r
	r @ deltat + dup r!+
	r@+ *. 1.0 min	| t
	r@+ over Ela_InOut
	*. r@+ + r> @ !
	1.0 - 1? ( drop ; )
	;

:tiempo2
	>r
	r @ deltat + dup r!+
	r@+ *. 1.0 min	| t
	dup Ela_InOut
	r@+ over *. r@+ +	| t tc x1
	r@+ rot *. r@+ +	| t x1 y1
	swap r> @ !+ !
	1.0 - 1? ( drop ; )
	;

|--- agrega a timeline
:+rot2d  | fn obj time --
	'tiempo 'tims p!+ >r
	0 r!+ 1000 *. 1.0 swap /. r!+
	20 +	| fn obj
	dup @			| fn obj obja
	rot over - r!+	| dB
	r!+				| A
	r> ! ;

:+scale  | fn obj time --
	'tiempo 'tims p!+ >r
	0 r!+ 1000 *. 1.0 swap /. r!+
	24 +	| escala
	dup @			| fn obj obja
	rot over - r!+	| dB
	r!+				| A
	r> ! ;

:+move2d | x y obj time --
	'tiempo2 'tims p!+ >r
	0 r!+ 1000 *. 1.0 swap /. r!+	| x y obj
	rot over @ swap over - r!+ r!+		| y obj
	swap over 4+ @ swap over - r!+ r!+	| obj
	r> !
	;


|----------------------------------
:escena
	time.next
	'tims p.exec

	omode
|	freelook
|	msec 4 << mroty
	xcam ycam zcam mtrans
	'drawsprite 'objs p.mapv
	;

|---------------------------------- TEST
:dump
	dup >r
	r@+ r@+ "%d %d " print
	r@+ r@+ "%f %f " print
	r@+ r@+ "%f %f " print cr
	rdrop
	;

:DUMPS
	'dump 'tims p.mapv
	;

:sord
	'svg6 rand 0.5 mod 0.8 + rand 0 0 0.0 rand 1.0 mod rand 1.0 mod objs! ;

:randobj
	rand 'objs p.cnt mod abs 'objs p.nro ;

:randtime
	rand 2.0 mod 3.0 + ;


:movt
	rand 1.0 mod rand 1.0 mod
    randobj
	randtime
	+move2d ;

:scat
	rand 0.8 mod 1.0 +
	randobj
	randtime
	+scale ;

:rot2
	rand 2.0 mod
	randobj
	randtime
	+rot2d ;


:main
	33
	time.ini
	show clrscr
		fonti
		dup "%d " print cr
		DUMPS cr
|		'objs p.cnt "%d" print cr

		escena
		'sord <f1>

		'movt <f2>
		'scat <f3>
		'rot2 <f4>

		'exit >esc<
		;

: emem main ;