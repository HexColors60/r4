| edit bones
| PHREDA 2017
|----------------
^r4/lib/gui.txt
^r4/lib/3dmat.txt

^r4/lib/trace.txt

#model
#model>

#chsum

#xcam 0 #ycam 0 #zcam 50.0
#xr 0 #yr 0

:model.reset
	0.0 0.0 0.0 0.0 1	| root node
	model !+ !+ !+ !+
	dup 'model> !
	0 swap ! ;

|------------------------------------------
:dumpmod | adr
	( @+ 1? )(
		"%h " print
		@+ "%f " print
		@+ "%f " print
		@+ "%f " print
		cr allowchome
		) 2drop
	;

:3dop project3d op ;
:3dline project3d line ;

:drawboxz | z --
	-0.5 -0.5 pick2 3dop
	0.5 -0.5 pick2 3dline
	0.5 0.5 pick2 3dline
	-0.5 0.5 pick2 3dline
	-0.5 -0.5 rot 3dline ;

:drawlinez | x1 x2 --
	2dup -0.5 3dop 0.5 3dline ;

#boneslevel )( 256
#bonesreal	)( 256

#cachepoint )( 1024
#cachepoint> 'cachepoint
#cachereal )( 1024
#cachereal> 'cachereal

:drawstick | level --

	dup 3 << 'bonesreal + >r
	0 0 0 transform drop swap
	2dup cachereal> !+ !+ 'cachereal> ! |****
	r!+ r> !

	dup 3 << 'boneslevel + >r
	0 0 0 project3d
	2dup
	pick4 1 =? ( amarillo 3 )( verde 2 ) nip
	box
	2dup op
	swap
	2dup cachepoint> !+ !+ 'cachepoint> !
	r!+ r!+ rdrop
	dup 2 <? ( drop ; )
	1- 3 << 'boneslevel + >r
	r@+ r@+ azul line
	rdrop
	;

:onpoint | x y -- p
	xymouse rot -
	abs 3 >? ( 3drop 0 ; ) drop
	- abs 3 >? ( drop 0 ; ) drop
	1 ;

:onpoints | -- nodo+1
	'cachepoint
	( cachepoint> <? )(
		@+ swap @+ rot swap
		onpoint 1? ( drop 'cachepoint - 3 >>  ; ) drop
		) drop 0 ;

:drawcube |
	verde
	-0.5 drawboxz
	0.5 drawboxz
	-0.5 -0.5 drawlinez
	0.5 -0.5 drawlinez
	0.5 0.5 drawlinez
	-0.5 0.5 drawlinez ;

:drawbones | bones --
	>r
	0 ( r@+ 1? )( dup $ff and
		rot over - 1+ clamp0 | anterior-actual+1
		nmpop
		mpush
		r@+ r@+ r@+ mtransi
		drawstick  |drawcube
		) drop
	rdrop
	nmpop
	;

:drawbones0 | bones --
	'cachepoint 'cachepoint> !
	'cachereal 'cachereal> !
	>r
	0 ( r@+ 1? )( $ff and
		swap over - 1+ clamp0 nmpop
		mpush
		r@+ r@+ r@+ mtransi
		drawstick |drawcube
		) drop
	rdrop
	nmpop
	;

|------------
#nodob
#xd #yd

:addnodemove
	nodob 0? ( drop ; )
	1- 3 << 'cachepoint + >r
	r@+ r@+ op
	xymouse line
	rdrop ;

:hacelugar | nro --
    model> model - 4 >>
    16 'model> +!
    >=? ( ; )
    dup 4 << model + | src
    dup 16 + swap 	| dst src
    model> over - 2 >>
    move>
	;


|------------
:addnodeup
	nodob 0? ( drop ; )
	xymouse zcam invproject3d 'yd ! 'xd !
	hacelugar
	dup 4 << model + >r
	1- 3 << 'cachereal +
	r 16 - @ 1+ r!+
	@+ xd swap - r!+
	@ yd swap - r!+
	0 r> !
	0 model> !
	;

:editaddnode
	[ onpoints 'nodob ! ; ]
	'addnodemove
	'addnodeup
	guiMap
	;

|------------
:movenodemove
	nodob 0? ( drop ; )
	1- dup 4 << model + 4+ >r
    xymouse zcam invproject3d 'yd ! 'xd !
    0? ( drop xd r!+ yd r> ! ; )	| root!
   	1- 3 << 'cachereal +
	@+ xd swap - r!+
	@ yd swap - r> !
	;

:editamovenode
	[ onpoints 'nodob ! ; ]
	'movenodemove
	[ ; ]
	guiMap
	;

|--------------------- compile
| largo|nivel rxyz
| 24|8 10|10|10

:drawskin | level --
	dup 3 << 'boneslevel + >r
	0 0 0 project3d
	2dup
	pick4 1 =? ( amarillo )( verde ) drop
	2 fbox
	2dup op
	swap
	2dup cachepoint> !+ !+ 'cachepoint> !
	r!+ r!+ rdrop
	dup 2 <? ( drop ; )
	1- 3 << 'boneslevel + >r
	r@+ r@+ gris line
	rdrop
	;

:drawbbones | adr --
	>r
	0 ( r@+ 1? )( dup $ff and	| nivel largo nnivel
		rot over - 1+ clamp0 | anterior-actual+1
		nmpop
		mpush
		r@+ mrotzi
		swap 8 >> 0 swap 0 mtransi
		drawskin
		) drop
	rdrop
	nmpop
	;

#bbonetest )( $fff

#dx #dy

:convert2bb | bones --
	16 + >r
	'bbonetest
	0 $1 rot !+ !+	| root
	( r@+ 1? )(
		$ff and
		r@+ dup 'dx ! dup *.
		r@+ dup 'dy ! dup *. +
		r@+ dup *. +
		sqrt.
		8 << or
		swap !+
		dx dy atan2
		swap !+
		) swap !
	rdrop ;

|---------------------
:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx
	mroty ;

#modonode	'editaddnode

:3dscreen
	omode
|	freelook
	xcam ycam zcam mtrans

|	model drawbones

	model drawbones0
	modonode exec

	model convert2bb
	'bbonetest drawbbones

	;

#smem


:main
	33
	show clrscr
		dup "%d" print cr
        nodob "%d" print cr

		model dumpmod cr
		3dscreen

		[ 'editaddnode 'modonode ! ; ] <f1>
		[ 'editamovenode 'modonode ! ; ] <f2>
		[ model convert2bb ; ] <f3>
		'exit >esc<
		cminiflecha ;

:ini
	mark
	here dup 'model !
	$fff + 'here !
	model.reset
	;

: ini main ;