| 2017 PHEDA
|-----------------
^r4/lib/gui.txt
^r4/lib/xfb.txt
^r4/lib/part16.txt
^r4/lib/plqlib.txt
^r4/lib/loadjpg.txt
^r4/lib/loadpng.txt
^r4/lib/loadbmp.txt
^r4/rtv/fx.spr


#xcam #ycam #zcam 2.0
#rxcam #rycam #rzcam

#fx 0 0
#objs 0 0

#archivo

#placas )( 64
#placas> 'placas
#nplaca 'placas

#placast )( 64
#placanow 'placast

#pantalla )( $ffff
#pantalla> 'pantalla

#tanim 0
#ttime 2000
#fondo 0
#cfondo $ffffff
#tabs )( 64
#ctab )( 64

#sizefnt
#typefnt
#colfnt
#xxc #yyc

:,placa | tt --
	placas> 'placas - 'placast + !
	pantalla> placas> !+ 'placas> !
	;

:,p | val --
	pantalla> !+ 'pantalla> ! ;

:reset
	'objs p.clear
	'fx p.clear
	;

|-------------------------------------------
:2color dup $f0f0f0 and dup 4 >> or swap $f0f0f and dup 4 << or ;
:to3d 0 project3d ;
:bfill
	tx1 ty1 to3d 2dup op
	tx2 ty1 to3d pline
	tx2 ty2 to3d pline
	tx1 ty2 to3d pline pline
	poli ;

:f1	ink bfill ;			| solido
:f2	ink bfill ;			| imagen?
:f3 2color fcol tx1 ty2 to3d fcen 1.0 tx2 tx1 to3d - 1 max / 0 fmat lfill bfill sfill ;
:f4 2color fcol tx1 ty2 to3d fcen 0 1.0 ty2 ty1 to3d - 1 max / fmat lfill bfill sfill ;
:f5 2color fcol tx1 ty1 to3d fcen 0.5 tx2 tx1 to3d - 1 max / 0.5 ty2 ty1 to3d - 1 max / neg fmat lfill bfill sfill ;
:f6 2color fcol tx1 ty2 to3d fcen 0.5 tx2 tx1 to3d - 1 max / 0.5 ty2 ty1 to3d - 1 max / fmat lfill bfill sfill ;
:f0 drop ;	| auxiliar

#lbfill f0 f1 f2 f3 f4 f5 f6 f0

:3dfillbox | nro --
	dup 28 >> 7 and 2 << 'lbfill + @ exec ;

:fillbox3d | x y x2 y2 --
	2over to3d op
	pick3 over to3d pline
	2dup to3d pline
	drop over to3d pline
	to3d pline
	poli ;

|-------------------------------------------
:stsprite
	>b
	mpush
	b@+ b@+ 0 mtransi
	b@+ 1? ( mrotxi )( drop )
	b@+ 1? ( mrotyi )( drop )
	b@+ 1? ( mrotzi )( drop )
	b@+ dup dup mscalei
	b@+ 3dnsprite
	mpop
	;

:+sprite | 'spr size x y --
	'stsprite 'objs p!+ >a
	swap a!+ a!+		| x y
	0 0 0 a!+ a!+ a!+	| rx ry rz
	a!+					| s
	a!					| sprite
	;

:sprite.n | nro -- spr
	6 << 'objs 4+ @ + ;

:nxy.sprite | x y nro --
	sprite.n 4+ >a swap a!+ a! ;

:xy.sprite | x y obj --
	4+ >a swap a!+ a! ;

|---------- animadores
#deltat
#prevt
#t0

:itime
	msec 'prevt ! 0 'deltat ! ;

:dtime
	msec dup prevt - 'deltat ! 'prevt ! ;

:llerp | a b -- r | a + t * (b - a) | t 0.0 .. 1.0
	over - t0 16 *>> + ;
:clerp | a b -- r | a + t * (b - a) | t 0.0 .. 1.0
	over - t0 cos abs 16 *>> + ;
:slerp | a b -- r | a + t * (b - a) | t 0.0 .. 1.0
	over - t0 sin abs 16 *>> + ;


:movlinea
	>a
	a@+ deltat + dup a> 4 - !
	16 << a@+ / 1.0 min 't0 !
	a@+
	4+ a@+ a@+ llerp over !	| x
	4+ a@+ a@+ llerp swap !	| y
	t0 1.0 - 1? ( drop ; )
	;

:+linea | xf yf obj time --
	'movlinea 'objs p!+ >a
	0 a!+ a!+	| 0 tmax
	dup a!+		| obj
	| xf yf obj
	4+ dup @ a!+ rot a!+
	4+ @ a!+ a!
	;

|-------------------------------------------
:stlogo
	>b
	mpush
	b@+ b@+ b@+ mtransi
|	0.0008 r +!
	b@+ 1? ( mrotxi )( drop )
|	0.01 r +!
	b@+ 1? ( mrotyi )( drop )
	b@+ 1? ( mrotzi )( drop )
	'logoatv 3dnsprite
	mpop ;

:+logo
	'stlogo 'objs p!+ >a
 	2.8 a!+ -1.5 a!+ 2.8 a!+
 	0 0 0 a!+ a!+ a!
	;

|-------------------------------------------
:timex
	>a
	a@+ deltat + dup a> 4 - !
	a@+ >=? ( drop a@ exec 0 ; )
	drop ;

:+time | 'exec tiempo --
	'timex 'fx p!+ >a
	0 a!+ a!+ a! ;

|-------------------------------------------
:xprints | "" --
	ccx ccy ink@
	0 ink
	0.005 dup +atxy
	pick3 ( c@+ 1? )( emitf ) 2drop
	ink atxy
	( c@+ 1? )( emitf ) 2drop
	;

:xprintn | "" --
	( c@+ 1? )( emitf ) 2drop ;

:xbox | x1 y1 x2 y2 --
	2over to3d 2dup >r >r op
	pick3 over to3d pline
	over swap to3d pline
	swap to3d pline drop
	r> r> pline
	gris poli ;

:xprintb | "" --
	ink@ >r
	sizeprint
	ccx ccy rot pick2 + cch pick2 + xbox
	r> ink
	( c@+ 1? )( emitf ) 2drop ;

|-------- dibuja objetos estaticos
| texto -- color x y fnt size "texto"
:t0	8 >> ink
	>b
	b@+ b@+ atxy
	b@+ b@+ setfont3d
	b@ xprintn ;

| caja -- color x y x y
:t1 8 >> ink
	>b
	b@+ b@+ b@+ b@ fillbox3d
	;

:t2
:t3
:t4
:t5
:t6
:t7
:t8 2drop ;

| imagen
| sprite
| video
| fx

#ldraw t0 t1 t2 t3 t4 t5 t6 t7 t8 t8 t8 t8 t8 t8 t8 t8

:drawbox
	@+ dup $f and 2 << 'ldraw + @ exec ;

:drawpant | adr --
	0 0 pos 4.0 2.0 dim home
	@+ swap @ swap
	( over <? )(
		dup drawbox
		32 + ) 2drop ;

|-----------------------------
:otexto
	>b b@+
	mpush
	b@+ b@+ setfont3d
	b@+ b@+ b@+ mtransi
|	0.02 r +!
	b@+ 1? ( mrotxi )( drop )
	b@+ 1? ( mrotyi )( drop )
	b@+ 1? ( mrotzi )( drop )
	b@+ ink
	b@+ b@+ atxy
	xprintn
	mpop ;

#pw
:+texto | color x y font size "" --
	'otexto 'objs p!+ >b
	pick2 pick2 swap setfont3d
	sizeprint 'pw !
	b!+				| ""
	b!+	b!+			| font size
	pw 2/ + b!+ b!+ 0 b!+	| x y z
	0 b!+ 0 b!+ 0 b!+		| rx ry rz
	b!+						| ink
	pw 2/ neg b!+
	cch neg 2/ b!+          | atxy
	;


|--- caja
:obox
	>a a@+ a@+ a@+ a@+
	a@ ink
    fillbox3d
    ;

:+box	| color x1 y1 x2 y3 --
	'obox 'objs p!+ >a
	a!+ a!+ a!+ a!+ a! ;

|------ inicia objetos de animacion
| texto -- color x y fnt size "texto"
:t0	8 >>
	swap >a
	a@+ a@+ swap
	a@+ a@+ swap
	a@ +texto ;

| caja -- color x y x y
:t1 8 >>
	swap >a
	a@+ a@+ swap
	a@+ a@+ swap
	+box ;

:t2
:t3
:t4
:t5
:t6
:t7
:t8 2drop ;

#lidraw t0 t1 t2 t3 t4 t5 t6 t7 t8 t8 t8 t8 t8 t8 t8 t8

:inidrawbox
	@+ dup $f and 2 << 'lidraw + @ exec ;

:inidrawpant | adr --
	'objs p.clear
	+logo	
	@+ swap @ swap
	( over <? )(
		dup inidrawbox
		32 + ) 2drop ;

|---------------------------------------
:startpant
	-1.6 'xxc !
	-1.0 'yyc !
	11 'typefnt !
	0.15 'sizefnt !
	0.15 1 'tabs !+ !
	typefnt sizefnt setfont3d
	;

:>>l | adr -- adr'
	( c@+ $ff and 31 >? )( drop )
	0? ( drop 1- ; ) drop
	0 over 1- c!
	;


:espag	|@@
	( c@+ $ff and 31 >? )(
		$61 =? ( swap str>nro 'tanim ! swap ) | a
		$74 =? ( swap getfenro 1000 *. 'ttime ! swap ) | t
		drop
		) drop
|	>>cr
    ttime tanim 24 << or ,placa
	startpant ;

:eslin 	|--
	$01 colfnt 8 << or ,p
	xxc ,p yyc ,p
	xxc 3.2 + ,p yyc 0.01 + ,p
	0 ,p 0 ,p 0 ,p
	0.1 'yyc +!
	>>cr ;

:>>| | adr -- adr'
	( c@+ $ff and 31 >? )(
		$7c =? ( ; )
		drop ) ;

#sumx

:boxl | "" tab -- "" x
	sumx swap 'sumx +! ;
:boxc | "" tab -- "" x
	swap sizeprint 2/ rot
	dup 2/ sumx + swap 'sumx +!
	swap - ;
:boxr | "" tab -- "" x
	swap sizeprint rot
	dup sumx + swap 'sumx +!
	swap - ;

#llbox boxl boxc boxr

:,tbox | "" tipo tab --
	pick2 c@ 0? ( 4drop ; ) drop

	colfnt 8 << ,p
	swap 1- 2 << 'llbox + @ exec
	,p yyc ,p
	typefnt ,p sizefnt ,p
	,p
	0 ,p
	0 ,p
	;

:esTexto
	'ctab >a
	dup a!+
	( >>| $7c =? )( drop
		0 over 1- c!
		dup a!+
		) drop
	0 over 1- c!
	a> 'ctab
	'tabs >a
	xxc 'sumx !
	( over <? )(
		@+
		a@+ a@+ ,tbox
		) 2drop
	sizefnt 2/ 'yyc +!
	;


|-------- configuracion
:gett | adr -- adr' valor
	c@+
	$6c =? ( drop str>nro 1 ; ) | l
	$63 =? ( drop str>nro 2 ; ) | c
	$72 =? ( drop str>nro 3 ; ) | r
	drop 1- 0 ;

:ctabs
	'tabs >a
	( gett 1? )(
		a!+ 3.2 * 100 / a!+	| 3.2 ancho pantalla
		dup c@ $2c =? ( drop 1+ )( drop ) | ,
		) drop
	1- >>cr
	;

:cfnts
	str>nro 'typefnt !
	1+ getfenro 'sizefnt !
	1+ str$>nro 'colfnt !
	typefnt sizefnt setfont3d
	1- >>cr
	;

:es;
	c@+
	$7c =? ( drop ctabs ; ) | ;|l10,c20,r20
	$66 =? ( drop cfnts ; )	| ;f11,0.15,ffffff |fuente,size,color

	drop
	1- >>cr ;

|--------------------
:setimg | adr -- adr'
	dup 'fondo ! >>l ;

:setfon | adr -- adr'
	str$>nro 'cfondo ! >>cr ;

| iatv/coso.p.jpg	| imagen de fondo
| fff0000			| color de fondo
:parseprev | adr -- adr'
	0 'fondo !
	( c@+ 1? )(
    	$40 =? ( drop 1- ; )
    	$69 =? ( drop setimg 0 ) | i
    	$66 =? ( drop setfon 0 ) | f
    	drop
		)
	drop 1- ;
	;
|----------------------------
| @@ cambio de pantalla t1.5 a0
| -- linea separadora 	c00ff00
| ;		config
|----------------------------
:parsec | adr c -- adr
	$3b =? ( drop es; ; ) | ; configura

	$40 =? ( drop dup c@ $40 =? ( drop espag ; ) ) |@@
	$2d =? ( drop dup c@ $2d =? ( drop eslin ; ) ) |--
    drop 1-
	esTexto
    ;

:quita10 | mem -- endmem
	dup
	( c@+ 1? )(
		13 =? ( over c@ 10 =? ( drop swap 1+ swap )( drop ) )
		10 =? ( drop c@+ 13 <>? ( drop 1- 13 ) )
		rot c!+ swap )
	nip swap c!+ ;

:loadimg | filename -- img
	".jpg" =pos 1? ( drop loadjpg ; ) drop
	".png" =pos 1? ( drop loadpng ; ) drop
	".bmp" =pos 1? ( drop loadbmp ; )
	2drop 0 ;

:loadparse | "" --
	here dup 'archivo !
	swap load 0 swap !
	archivo quita10
	'here !
	archivo
	parseprev
	startpant
	( c@+ 1? )( parsec )
	2drop
	0 ,placa
	fondo 0? ( drop ; ) loadimg 'fondo !
	;

|--------------

:freelook
	xymouse
	sh 2/ - 7 << swap
	sw 2/ - neg 7 << swap
	neg mrotx
	mroty ;

:nextdraw
	4 'nplaca +!
	4 'placanow +!

	nplaca inidrawpant

	placanow @ 0? ( exit drop ; )
    'nextdraw over $ffffff and
	+time
	drop
	;

:predraw
	cfondo 'paper !
	fondo 1? ( 0 0 sw sh fondo img.drawsize )( cls )
	drop
	>xfb
	itime

	'placas 'nplaca !
	'placast 'placanow !

	nplaca inidrawpant

	placanow @
    'nextdraw over $ffffff and
	+time
	drop
	;


:timedraw
	omode
|		freelook
	rxcam 1? ( mrotxi )( drop )
	rycam 1? ( mrotyi )( drop )
	rzcam 1? ( mrotzi )( drop )
	xcam ycam zcam mtrans
|	nplaca drawpant
	dtime
	'fx p.draw
|	0 0 pos 4.0 2.0 dim home
	'objs p.draw
	;


:main
	33
	predraw

	show xfb>scr
		fonti azul
|		dup "%d" print
|		[ dup "%h " print cr ; ] 'objs p.mapv

		timedraw


		'exit >esc<
		cminiflecha ;

:memoria
	inixfb
	mark
	256 'objs p.ini
	1024 'fx p.ini

	"atv/urgente.txt" loadparse
|	"atv/profesionalesmedicos.txt" loadparse
	;

: memoria main ;
